{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\n\nvar MessageModule = function (_React$Component) {\n  _inherits(MessageModule, _React$Component);\n\n  var _super = _createSuper(MessageModule);\n\n  function MessageModule(props) {\n    var _this;\n\n    _classCallCheck(this, MessageModule);\n\n    _this = _super.call(this, props);\n\n    _this.onShare = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Share.share({\n                message: \"courtesy | \" + _this.props.post.title\n              }));\n\n            case 3:\n              result = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              alert(_context.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this.state = {\n      voted: ''\n    };\n    return _this;\n  }\n\n  _createClass(MessageModule, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var post = this.props.post;\n      var voted = this.state.voted;\n      return React.createElement(TouchableOpacity, {\n        style: styles.messageModule,\n        key: post.title,\n        onPress: function onPress() {\n          return _this2.props.setPostToDisplay(post);\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '12%',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      }, React.createElement(Ionicons, {\n        name: 'md-chevron-up',\n        color: voted === 'up' ? 'white' : '#768A89',\n        size: 26,\n        onPress: function onPress() {\n          if (voted === 'up') {\n            _this2.setState({\n              voted: ''\n            });\n\n            post.upvotes--;\n          } else if (voted === 'down') {\n            _this2.setState({\n              voted: 'up'\n            });\n\n            post.upvotes += 2;\n          } else {\n            _this2.setState({\n              voted: 'up'\n            });\n\n            post.upvotes++;\n          }\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontWeight: 'bold',\n          fontSize: 18\n        }\n      }, \" \", post.upvotes, \" \"), React.createElement(Ionicons, {\n        name: 'md-chevron-down',\n        color: voted === 'down' ? 'white' : '#768A89',\n        size: 26,\n        onPress: function onPress() {\n          if (voted === 'down') {\n            _this2.setState({\n              voted: ''\n            });\n\n            post.upvotes++;\n          } else if (voted === 'up') {\n            _this2.setState({\n              voted: 'down'\n            });\n\n            post.upvotes -= 2;\n          } else {\n            _this2.setState({\n              voted: 'down'\n            });\n\n            post.upvotes--;\n          }\n        }\n      })), React.createElement(View, {\n        style: {\n          padding: 5,\n          width: '85%',\n          justifyContent: 'space-between'\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        }\n      }, post.title), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        }\n      }, React.createElement(Ionicons, {\n        name: 'md-chatbox-ellipses',\n        color: 'white',\n        size: 20\n      }), React.createElement(Text, {\n        style: {\n          color: 'white'\n        }\n      }, \" \", post.comments.length, \" \", post.comments.length === 1 ? 'comment' : 'comments', \" \")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        }\n      }, React.createElement(Ionicons, {\n        name: 'md-share-social',\n        color: 'white',\n        size: 20\n      }), React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        onPress: this.onShare\n      }, \" share \")))));\n    }\n  }]);\n\n  return MessageModule;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  messageModule: {\n    backgroundColor: '#A7CBC8',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.33,\n    shadowRadius: 3,\n    borderRadius: 10,\n    flexDirection: 'row',\n    padding: 10,\n    width: '90%',\n    height: 100,\n    marginBottom: 25\n  }\n});\nexport default MessageModule;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/MessageModule.js"],"names":["React","useState","useEffect","Ionicons","MessageModule","props","onShare","Share","share","message","post","title","result","alert","state","voted","styles","messageModule","setPostToDisplay","width","justifyContent","alignItems","setState","upvotes","color","fontWeight","fontSize","padding","flexDirection","comments","length","Component","StyleSheet","create","backgroundColor","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n  BackHandler,\n  ScrollView,\n  Share,\n  Dimensions,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nclass MessageModule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      voted: '',\n    };\n  }\n\n  onShare = async () => {\n    try {\n      const result = await Share.share({\n        message: `courtesy | ${this.props.post.title}`,\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  render() {\n    const { post } = this.props;\n    const { voted } = this.state;\n\n    return (\n      <TouchableOpacity style={styles.messageModule} key={post.title} onPress={() => this.props.setPostToDisplay(post)}>\n        <View style={{ width: '12%', justifyContent: 'center', alignItems: 'center' }}>\n          <Ionicons name={'md-chevron-up'} color={ voted === 'up' ? 'white' : '#768A89' } size={26} onPress={() => {\n            if (voted === 'up') {\n              this.setState({ voted: '' });\n              post.upvotes--;\n            } else if (voted === 'down') {\n              this.setState({ voted: 'up' });\n              post.upvotes += 2;\n            } else {\n              this.setState({ voted: 'up' });\n              post.upvotes++;\n            }\n          }}/>\n          <Text style={{ color: 'white', fontWeight: 'bold', fontSize: 18 }}> {post.upvotes} </Text>\n          <Ionicons name={'md-chevron-down'} color={ voted === 'down' ? 'white' : '#768A89' } size={26} onPress={() => {\n            if (voted === 'down') {\n              this.setState({ voted: '' });\n              post.upvotes++;\n            } else if (voted === 'up') {\n              this.setState({ voted: 'down' });\n              post.upvotes -= 2;\n            } else {\n              this.setState({ voted: 'down' });\n              post.upvotes--;\n            }\n          }}/>\n        </View>\n        <View style={{ padding: 5, width: '85%', justifyContent: 'space-between' }}>\n          <Text style={{ color: 'white' }}>{post.title}</Text>\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Ionicons name={'md-chatbox-ellipses'} color={'white'} size={20}/>\n              <Text style={{ color: 'white' }}> {post.comments.length} {post.comments.length === 1 ? 'comment' : 'comments'} </Text>\n            </View>\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Ionicons name={'md-share-social'} color={'white'} size={20}/>\n              <Text style={{ color: 'white' }} onPress={this.onShare}> share </Text>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  messageModule: {\n    backgroundColor: '#A7CBC8',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.33,\n    shadowRadius: 3,\n    borderRadius: 10,\n    flexDirection: 'row',\n    padding: 10,\n    width: '90%',\n    height: 100,\n    marginBottom: 25,\n  }\n});\n\nexport default MessageModule;\n"]},"metadata":{},"sourceType":"module"}