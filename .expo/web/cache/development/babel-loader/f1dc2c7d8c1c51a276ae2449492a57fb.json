{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SignUpFlow from \"./screens/SignUpFlow\";\nvar styles = StyleSheet.create({\n  dropShadow: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  }\n});\n\nfunction TaskScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Tasks!\"));\n}\n\nfunction MyPlanScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"My Plan!\"));\n}\n\nfunction MessageBoardScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Message Board!\"));\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Settings!\"));\n}\n\nvar signUpFlow = true;\n\nfunction setSignUpFlow(bool) {\n  signUpFlow = bool;\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignUpFlow = _useState2[0],\n      setisSignUpFlow = _useState2[1];\n\n  if (isSignUpFlow) {\n    return React.createElement(SignUpFlow, {\n      setisSignUpFlow: setisSignUpFlow\n    });\n  } else {\n    return React.createElement(NavigationContainer, {\n      style: {\n        boxShadow: \"0px -3px 5px rgba(0, 0, 0, 0.4)\"\n      }\n    }, React.createElement(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n\n            if (route.name === 'Home') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'home' : 'home-outline',\n                size: size,\n                color: color\n              });\n            } else if (route.name === 'Tasks') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'checkmark-circle' : 'checkmark-circle-outline',\n                size: size,\n                color: color\n              });\n            } else if (route.name === ' ') {\n              return React.createElement(View, {\n                style: [{\n                  backgroundColor: 'white',\n                  width: \"90%\",\n                  height: \"180%\",\n                  borderRadius: \"100%\",\n                  display: \"flex\",\n                  zIndex: 4,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  shadowColor: \"black\",\n                  boxShadow: \"0px 0px 5px #4F403D\"\n                }, styles.dropShadow]\n              }, React.createElement(Ionicons, {\n                name: focused ? 'bookmark' : 'bookmark-outline',\n                size: size * 1.5,\n                color: \"#779391\"\n              }));\n            } else if (route.name === 'Forum') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'chatbubbles' : 'chatbubbles-outline',\n                size: size,\n                color: color\n              });\n            } else if (route.name === 'Settings') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'settings' : 'settings-outline',\n                size: size,\n                color: color\n              });\n            }\n          },\n          tabBarInactiveTintColor: 'white',\n          tabBarActiveTintColor: 'white',\n          tabBarActiveBackgroundColor: '#779391',\n          tabBarInactiveBackgroundColor: '#779391',\n          tabBarStyle: {\n            boxShadow: \"0px -3px 5px rgba(0, 0, 0, 0.4)\"\n          }\n        };\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), React.createElement(Tab.Screen, {\n      name: \"Tasks\",\n      component: TaskScreen\n    }), React.createElement(Tab.Screen, {\n      name: \" \",\n      component: MyPlanScreen\n    }), React.createElement(Tab.Screen, {\n      name: \"Forum\",\n      component: MessageBoardScreen\n    }), React.createElement(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen\n    })));\n  }\n}","map":{"version":3,"sources":["/home/uphatak/courtesy/App.js"],"names":["React","useState","useEffect","Ionicons","NavigationContainer","createBottomTabNavigator","HomeScreen","SignUpFlow","styles","StyleSheet","create","dropShadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","TaskScreen","flex","justifyContent","alignItems","MyPlanScreen","MessageBoardScreen","SettingsScreen","signUpFlow","setSignUpFlow","bool","Tab","App","isSignUpFlow","setisSignUpFlow","boxShadow","route","tabBarIcon","focused","color","size","name","backgroundColor","borderRadius","display","zIndex","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","tabBarStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from './screens/HomeScreen';\nimport SignUpFlow from './screens/SignUpFlow';\n\n// function HomeScreen() {\n//   return (\n//     <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n//       <Text>Home!</Text>\n//     </View>\n//   );\n// }\n\nconst styles = StyleSheet.create({\n  dropShadow:  {\n    shadowColor: '#171717',\n    shadowOffset: {width: -2, height: 4},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n  }\n})\n\nfunction TaskScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Tasks!</Text>\n    </View>\n  );\n}\n\nfunction MyPlanScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>My Plan!</Text>\n    </View>\n  );  \n}\n\nfunction MessageBoardScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Message Board!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nlet signUpFlow = true;\n\nfunction setSignUpFlow(bool) {\n    signUpFlow = bool;\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n    const [isSignUpFlow, setisSignUpFlow] = useState(true)\n    // hook variable thing\n    if (isSignUpFlow) {\n        return  (\n            <SignUpFlow setisSignUpFlow={setisSignUpFlow}/>\n        );\n    } else {\n    return (\n        <NavigationContainer style={{boxShadow: \"0px -3px 5px rgba(0, 0, 0, 0.4)\"}}>\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n                if (route.name === 'Home') {\n                return (\n                    <Ionicons\n                    name={focused ? 'home' : 'home-outline'}\n                    size={size}\n                    color={color}\n                    />\n                );\n                } else if (route.name === 'Tasks') {\n                return (\n                    <Ionicons\n                    name={focused ? 'checkmark-circle' : 'checkmark-circle-outline'}\n                    size={size}\n                    color={color}\n                    />\n                );\n                \n                // Not sure if this is the best way to handle this, but I don't want\n                // text under the bookmark icon so it seems like the best solution is \n                // to name this route \" \" so no text shows up\n                } else if (route.name === ' ') {\n                return (\n                    <View style={[{\n                    backgroundColor: 'white',\n                    width: \"90%\",\n                    height: \"180%\",\n                    borderRadius: \"100%\",\n                    display: \"flex\",\n                    zIndex: 4,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    shadowColor: \"black\",\n                    boxShadow: \"0px 0px 5px #4F403D\",\n\n                    }, styles.dropShadow]}>\n                    <Ionicons\n                        name={focused ? 'bookmark' : 'bookmark-outline'}\n                        size={size * 1.5}\n                        color={\"#779391\"}\n                    />\n                    </View>\n                );\n                } else if (route.name === 'Forum') {\n                return (\n                    <Ionicons\n                    name={focused ? 'chatbubbles' : 'chatbubbles-outline'}\n                    size={size}\n                    color={color}\n                    />\n                );\n                } else if (route.name === 'Settings') {\n                return (\n                    <Ionicons\n                    name={focused ? 'settings' : 'settings-outline'}\n                    size={size}\n                    color={color}\n                    /> \n                );\n                }\n            },\n            tabBarInactiveTintColor: 'white',\n            tabBarActiveTintColor: 'white',\n            tabBarActiveBackgroundColor: '#779391',\n            tabBarInactiveBackgroundColor: '#779391',\n            tabBarStyle: {boxShadow: \"0px -3px 5px rgba(0, 0, 0, 0.4)\"},\n            })}\n        >\n            <Tab.Screen name=\"Home\" component={HomeScreen} />\n            <Tab.Screen name=\"Tasks\" component={TaskScreen} />\n            <Tab.Screen name=\" \" component={MyPlanScreen} />\n            <Tab.Screen name=\"Forum\" component={MessageBoardScreen} />\n            <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n        </Tab.Navigator>\n        </NavigationContainer>\n    );\n    }\n}"]},"metadata":{},"sourceType":"module"}