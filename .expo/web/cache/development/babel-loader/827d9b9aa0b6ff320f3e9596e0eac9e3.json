{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport MapView from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getCountdownDays, homeScreenMoods, moods } from \"../utils\";\n\nvar swoopBackground = require(\"./home_background.png\");\n\nvar xCoordinates = [20, 150, 284, 30, 160, 284, 20, 150, 280, 20, 280];\nvar yCoordinates = [30, -15, -185, -160, -195, -380, -350, -370, -550, -530, -640];\n\nvar MoodBubble = function MoodBubble(_ref) {\n  var mood = _ref.mood,\n      index = _ref.index,\n      setMood = _ref.setMood,\n      setIsMoodPicker = _ref.setIsMoodPicker,\n      setisSignUpFlow = _ref.setisSignUpFlow,\n      setIsCustomMoodScreen = _ref.setIsCustomMoodScreen;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (mood !== \"other...\") {\n        setMood(mood.toLowerCase());\n        setIsMoodPicker(false);\n        setisSignUpFlow(false);\n      } else {\n        setIsCustomMoodScreen(true);\n      }\n    }\n  }, React.createElement(View, {\n    style: [{\n      left: xCoordinates[index],\n      top: yCoordinates[index],\n      position: 'fixed'\n    }, mood == \"other...\" ? styles.otherBubble : styles.moodBubble]\n  }, React.createElement(Text, {\n    style: mood == \"other...\" ? styles.otherText : styles.moodText\n  }, \" \", mood, \" \")));\n};\n\nvar MoodPicker = function MoodPicker(_ref2) {\n  var setMood = _ref2.setMood,\n      setIsMoodPicker = _ref2.setIsMoodPicker,\n      setisSignUpFlow = _ref2.setisSignUpFlow,\n      mood = _ref2.mood,\n      navigation = _ref2.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isCustomMoodScreen = _React$useState2[0],\n      setIsCustomMoodScreen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      customMood = _React$useState4[0],\n      setCustomMood = _React$useState4[1];\n\n  if (isCustomMoodScreen) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        padding: 0,\n        backgroundColor: '#768A89'\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: 70,\n        marginLeft: 20,\n        alignItems: 'center'\n      }\n    }, React.createElement(Ionicons, {\n      name: 'arrow-back',\n      color: 'white',\n      size: 30,\n      onPress: function onPress() {\n        return setIsCustomMoodScreen(false);\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 24\n      },\n      onPress: function onPress() {\n        return setIsCustomMoodScreen(false);\n      }\n    }, \" Back \")), React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 26,\n        fontWeight: '500',\n        textAlign: 'center',\n        marginTop: 210,\n        marginLeft: 60,\n        marginRight: 60\n      }\n    }, \"Would you like to share how you feel about your upcoming court summons today?\"), React.createElement(TextInput, {\n      style: {\n        borderWidth: 1.5,\n        padding: 10,\n        margin: 20,\n        borderRadius: 8,\n        borderColor: 'white',\n        color: 'white',\n        fontSize: 20\n      },\n      value: customMood,\n      onChangeText: setCustomMood\n    }), React.createElement(TouchableOpacity, {\n      style: customMood.length == 0 ? styles.disabledButton : styles.button,\n      onPress: function onPress() {\n        if (customMood.length != 0) {\n          setMood(customMood);\n          setIsCustomMoodScreen(false);\n          setIsMoodPicker(false);\n        }\n      }\n    }, React.createElement(Text, null, \" Continue \")));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        padding: 0,\n        backgroundColor: '#768A89'\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 22,\n        fontWeight: '500',\n        textAlign: 'center',\n        marginTop: 100,\n        marginLeft: 60,\n        marginRight: 60,\n        marginBottom: -40\n      }\n    }, \"Would you like to share how you feel about your upcoming court summons today?\"), moods.map(function (mood, key) {\n      return React.createElement(MoodBubble, {\n        mood: mood,\n        key: key,\n        index: key,\n        setMood: setMood,\n        setisSignUpFlow: setisSignUpFlow,\n        setIsMoodPicker: setIsMoodPicker,\n        setIsCustomMoodScreen: setIsCustomMoodScreen\n      });\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: 'center',\n        alignSelf: 'center',\n        top: -650\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 24\n      },\n      onPress: function onPress() {\n        setMood('default');\n        setIsMoodPicker(false);\n      }\n    }, \" Skip \"), React.createElement(Ionicons, {\n      name: 'arrow-forward',\n      color: 'white',\n      size: 30,\n      onPress: function onPress() {\n        setMood('default');\n        setIsMoodPicker(false);\n      }\n    })));\n  }\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: 'white',\n    color: '#768A89',\n    width: 130,\n    height: 50,\n    borderRadius: 90,\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    marginTop: 30\n  },\n  disabledButton: {\n    backgroundColor: '#819897',\n    width: 130,\n    height: 50,\n    borderRadius: 90,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    marginTop: 30\n  },\n  otherText: {\n    color: 'black',\n    fontWeight: \"500\"\n  },\n  moodText: {\n    color: 'white',\n    fontWeight: \"500\"\n  },\n  otherBubble: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 100,\n    backgroundColor: '#bad9d7',\n    width: 110,\n    height: 110,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4\n  },\n  moodBubble: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 100,\n    backgroundColor: '#8DA4A3',\n    width: 110,\n    height: 110,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4\n  },\n  moodTextContainer: {\n    position: 'absolute',\n    top: 60,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center'\n  }\n});\nexport default MoodPicker;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/MoodPicker.js"],"names":["React","useState","useEffect","MapView","Marker","Ionicons","getCountdownDays","homeScreenMoods","moods","swoopBackground","require","xCoordinates","yCoordinates","MoodBubble","mood","index","setMood","setIsMoodPicker","setisSignUpFlow","setIsCustomMoodScreen","toLowerCase","left","top","position","styles","otherBubble","moodBubble","otherText","moodText","MoodPicker","navigation","isCustomMoodScreen","customMood","setCustomMood","flex","padding","backgroundColor","flexDirection","marginTop","marginLeft","alignItems","color","fontSize","fontWeight","textAlign","marginRight","borderWidth","margin","borderRadius","borderColor","length","disabledButton","button","marginBottom","map","key","alignSelf","StyleSheet","create","width","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","justifyContent","moodTextContainer","right","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n} from 'react-native';\nimport MapView from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getCountdownDays, homeScreenMoods, moods } from '../utils';\n\nconst swoopBackground = require(\"./home_background.png\");\n\nconst xCoordinates = [20, 150, 284, 30, 160, 284, 20, 150, 280, 20, 280];\nconst yCoordinates = [30, -15, -185, -160, -195, -380, -350, -370, -550, -530, -640];\n\nconst MoodBubble = ({ mood, index, setMood, setIsMoodPicker, setisSignUpFlow, setIsCustomMoodScreen }) => {\n  return (\n    <TouchableOpacity onPress={() => {\n      if (mood !== \"other...\") {\n        setMood(mood.toLowerCase());\n        setIsMoodPicker(false);\n        setisSignUpFlow(false)\n      } else {\n        setIsCustomMoodScreen(true);\n      //  setisSignUpFlow(false)\n      }\n    }}>\n      <View style={[{left: xCoordinates[index],\n      top: yCoordinates[index],\n      position: 'fixed'}, mood == \"other...\" ? styles.otherBubble : styles.moodBubble\n      ]}>\n        <Text style={mood==\"other...\" ? styles.otherText : styles.moodText}> {mood} </Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MoodPicker = ({ setMood, setIsMoodPicker, setisSignUpFlow, mood, navigation }) => {\n  const [isCustomMoodScreen, setIsCustomMoodScreen] = React.useState(false);\n  const [customMood, setCustomMood] = React.useState('');\n\n  if (isCustomMoodScreen) {\n    return (\n      <View style={{ flex: 1, padding: 0, backgroundColor: '#768A89' }}>\n        <View style={{ flexDirection: 'row', marginTop: 70, marginLeft: 20, alignItems: 'center' }}>\n          <Ionicons name={'arrow-back'} color={'white'} size={30} onPress={() => setIsCustomMoodScreen(false)}/>\n          <Text style={{ color: 'white', fontSize: 24 }} onPress={() => setIsCustomMoodScreen(false)}> Back </Text>\n        </View>\n        <Text style={{ color: 'white', fontSize: 26, fontWeight: '500', textAlign: 'center', marginTop: 210, marginLeft: 60, marginRight: 60}}>Would you like to share how you feel about your upcoming court summons today?</Text>\n        <TextInput\n          style={{ borderWidth: 1.5, padding: 10, margin: 20, borderRadius: 8, borderColor: 'white', color: 'white', fontSize: 20 }}\n          value={customMood}\n          onChangeText={setCustomMood}\n        />\n        <TouchableOpacity style={customMood.length == 0 ? styles.disabledButton : styles.button} onPress={() => {\n          if (customMood.length != 0) {\n            setMood(customMood);\n            setIsCustomMoodScreen(false);\n            setIsMoodPicker(false);\n          }\n        }}>\n          <Text> Continue </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  } else {\n    return (\n        <View style={{ flex: 1, padding: 0, backgroundColor: '#768A89' }}>\n          <Text style={{ color: 'white', fontSize: 22, fontWeight: '500', textAlign: 'center', marginTop: 100, marginLeft: 60, marginRight: 60, marginBottom: -40}}>Would you like to share how you feel about your upcoming court summons today?</Text>\n          {\n            moods.map((mood, key) => {\n              return (<MoodBubble mood={mood} key={key} index={key} setMood={setMood} setisSignUpFlow={setisSignUpFlow} setIsMoodPicker={setIsMoodPicker} setIsCustomMoodScreen={setIsCustomMoodScreen}/>)\n            })\n          }\n          <View style={{ flexDirection: \"row\", alignItems: 'center', alignSelf: 'center', top: -650 }}>\n            <Text style={{ color: 'white', fontSize: 24 }} onPress={() => {\n              setMood('default');\n              setIsMoodPicker(false);\n            }}> Skip </Text>\n            <Ionicons name={'arrow-forward'} color={'white'} size={30} onPress={() => {\n              setMood('default');\n              setIsMoodPicker(false);\n            }}/>\n          </View>\n        </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: 'white',\n    color: '#768A89',\n    width: 130,\n    height: 50,\n    borderRadius: 90,\n    shadowColor: '#171717',\n    shadowOffset: {width: 0, height: 2},\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    marginTop: 30,\n  },\n  disabledButton: {\n    backgroundColor: '#819897',\n    width: 130,\n    height: 50,\n    borderRadius: 90,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    marginTop: 30,\n  },\n  \n  otherText: {\n    color: 'black',\n    fontWeight: \"500\",\n  },\n  moodText :{\n    color: 'white',\n    fontWeight: \"500\",\n  },\n  otherBubble : {\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 100,\n      backgroundColor: '#bad9d7',\n      width: 110,\n      height: 110,\n      shadowColor: '#000',\n      shadowOffset: {width: 0, height: 0},\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n  },\n  moodBubble: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 100,\n      backgroundColor: '#8DA4A3',\n      width: 110,\n      height: 110,\n      shadowColor: '#000',\n      shadowOffset: {width: 0, height: 0},\n      shadowOpacity: 0.25,\n      shadowRadius: 4,\n  },\n  moodTextContainer: {\n    position: 'absolute',\n    top: 60,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n  },\n  \n});\n\nexport default MoodPicker;\n"]},"metadata":{},"sourceType":"module"}