{"ast":null,"code":"import * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getCountdownDays, homeScreenMoods, moods } from \"../utils\";\nimport MessageBoardScreen from \"./MessageBoardScreen\";\nimport TransportationResourcesPage from \"./TransportationResourcesPage\";\nimport MakeAPlan from \"./MakeAPlan\";\n\nvar swoopBackground = require(\"./Message_Board_Background.png\");\n\nvar TransportationTasksScreen = function TransportationTasksScreen(_ref) {\n  var navigation = _ref.navigation,\n      mood = _ref.mood,\n      selectedCategory = _ref.selectedCategory,\n      setSelectedCategory = _ref.setSelectedCategory,\n      nextScreen = _ref.nextScreen,\n      setNextScreen = _ref.setNextScreen;\n  var moodKey = mood;\n\n  if (moods.indexOf(mood) == -1) {\n    moodKey = \"other\";\n  }\n\n  if (nextScreen == \"\") {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      }\n    }, React.createElement(ImageBackground, {\n      source: swoopBackground,\n      style: {\n        width: '102%',\n        height: '103%',\n        left: -1\n      }\n    }, React.createElement(Text, {\n      style: {\n        top: 65,\n        color: 'white',\n        fontSize: 28,\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica',\n        textAlign: 'center',\n        marginRight: 20,\n        marginLeft: 20,\n        marginTop: 20\n      }\n    }, \" let\\u2019s figure out how you\\u2019ll get to court!\"), React.createElement(View, {\n      style: {\n        flex: 0.75\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        marginTop: 150,\n        marginBottom: 50,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.categoryModule,\n      onPress: function onPress() {\n        return setNextScreen(\"resources\");\n      }\n    }, React.createElement(Text, {\n      style: styles.categoryText\n    }, \" access resources to help you get representation.\")), React.createElement(TouchableOpacity, {\n      style: styles.categoryModule,\n      onPress: function onPress() {\n        return setNextScreen(\"messageBoard\");\n      }\n    }, React.createElement(Text, {\n      style: styles.categoryText\n    }, \" discuss transportation options with other courtesy users.\")), React.createElement(TouchableOpacity, {\n      style: styles.categoryModule,\n      onPress: function onPress() {\n        return setNextScreen(\"makePlan\");\n      }\n    }, React.createElement(Text, {\n      style: styles.categoryText\n    }, \" make your plan! \"))))));\n  } else if (nextScreen == \"messageBoard\") {\n    return React.createElement(MessageBoardScreen, {\n      selectedCategory: 'transportation',\n      setSelectedCategory: setSelectedCategory\n    });\n  } else if (nextScreen == \"resources\") {\n    return React.createElement(TransportationResourcesPage, null);\n  } else if (nextScreen == \"makePlan\") {\n    return React.createElement(MakeAPlan, null);\n  }\n};\n\nvar styles = StyleSheet.create({\n  categoryModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 90,\n    width: '90%',\n    justifyContent: 'center'\n  },\n  categoryText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center',\n    alignSelf: 'center'\n  }\n});\nexport default TransportationTasksScreen;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/TransportationTaskPage.js"],"names":["React","MapView","Marker","Ionicons","getCountdownDays","homeScreenMoods","moods","MessageBoardScreen","TransportationResourcesPage","MakeAPlan","swoopBackground","require","TransportationTasksScreen","navigation","mood","selectedCategory","setSelectedCategory","nextScreen","setNextScreen","moodKey","indexOf","flex","width","height","left","top","color","fontSize","fontWeight","fontFamily","textAlign","marginRight","marginLeft","marginTop","marginBottom","justifyContent","alignItems","styles","categoryModule","categoryText","StyleSheet","create","backgroundColor","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderRadius","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  ImageBackground,\n  Dimensions,\n} from 'react-native';\nimport MapView from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getCountdownDays, homeScreenMoods, moods } from '../utils';\nimport MessageBoardScreen from './MessageBoardScreen';\nimport TransportationResourcesPage from './TransportationResourcesPage';\nimport MakeAPlan from './MakeAPlan';\n\n\nconst swoopBackground = require(\"./Message_Board_Background.png\");\n\nconst TransportationTasksScreen = ({ navigation, mood, selectedCategory, setSelectedCategory, nextScreen, setNextScreen }) => {\n\n  let moodKey = mood;\n  if (moods.indexOf(mood) == -1) {\n    moodKey = \"other\";\n  }\n\n  if (nextScreen == \"\") {\n    return (\n            <View style={{ flex: 1 }}>\n            <ImageBackground source={swoopBackground} style={{width: '102%', height: '103%', left: -1}}>\n                <Text style={{ top: 65, color: 'white', fontSize: 28, fontWeight: 'bold', fontFamily: 'Helvetica', textAlign: 'center', marginRight:20, marginLeft: 20, marginTop: 20 }}> let’s figure out how\n                you’ll get to court!</Text>\n                <View style={{ flex: 0.75 }}>\n                <View style={{ flex: 1, marginTop: 150, marginBottom: 50, justifyContent: 'space-between', alignItems: 'center' }}>\n                        <TouchableOpacity style={styles.categoryModule}\n                        onPress={() => setNextScreen(\"resources\")}>\n                        <Text style={styles.categoryText}> access resources to help you get representation.</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.categoryModule}\n                            onPress={() => setNextScreen(\"messageBoard\")}>\n                        <Text style={styles.categoryText}> discuss transportation options with other courtesy users.</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.categoryModule}\n                        onPress={() => setNextScreen(\"makePlan\")}>\n                        <Text style={styles.categoryText}> make your plan! </Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </ImageBackground>\n            </View>\n        );\n  }\n  else if (nextScreen == \"messageBoard\") {\n      return (\n          <MessageBoardScreen\n          selectedCategory={'transportation'}\n          setSelectedCategory={setSelectedCategory}/>\n      )\n  }\n  else if (nextScreen == \"resources\") {\n    return (\n        <TransportationResourcesPage/>\n    )\n}\nelse if (nextScreen == \"makePlan\") {\n    return (\n        <MakeAPlan/>\n    )\n}\n\n};\n\nconst styles = StyleSheet.create({\n    categoryModule: {\n        backgroundColor: \"#8AB5B2\",\n        borderWidth: 1,\n        borderColor: \"rgba(118, 138, 137, 0.5)\",\n        shadowColor: '#000',\n        shadowOffset: {width: 1, height: 2},\n        shadowOpacity: 0.2,\n        shadowRadius: 3,\n        borderRadius: 14,\n        height: 90,\n        width: '90%',\n        justifyContent: 'center'\n      },\n      categoryText: {\n        color: 'white',\n        fontSize: 18,\n        textAlign: 'center',\n        alignSelf: 'center'\n      }\n});\n\nexport default TransportationTasksScreen;\n"]},"metadata":{},"sourceType":"module"}