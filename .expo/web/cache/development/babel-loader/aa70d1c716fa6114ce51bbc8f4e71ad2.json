{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SignUpFlow from \"./screens/SignUpFlow\";\nimport MoodPicker from \"./screens/MoodPicker\";\nimport MyPlanScreen from \"./screens/MyPlanScreen\";\nimport MessageBoardScreen from \"./screens/MessageBoardScreen\";\nimport TaskScreen from \"./screens/TasksScreen\";\nimport MakeAPost from \"./screens/MakeAPost\";\nimport SettingsScreen from \"./screens/Settings\";\nvar styles = StyleSheet.create({\n  dropShadow: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  }\n});\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignUpFlow = _useState2[0],\n      setisSignUpFlow = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMoodPicker = _useState4[0],\n      setIsMoodPicker = _useState4[1];\n\n  var _useState5 = useState('productive'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mood = _useState6[0],\n      setMood = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      firstName = _useState8[0],\n      onChangeFirstName = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      courtDate = _useState10[0],\n      onChangeCourtDate = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      courtLocation = _useState12[0],\n      onChangeCourtLocation = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      courtTime = _useState14[0],\n      onChangeCourtTime = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      childCare = _useState16[0],\n      onChangeChildCare = _useState16[1];\n\n  var _useState17 = useState('none'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedCategory = _useState18[0],\n      setSelectedCategory = _useState18[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      car = _React$useState2[0],\n      onChangeCar = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      legalRep = _React$useState4[0],\n      onChangeLegalRep = _React$useState4[1];\n\n  if (isSignUpFlow) {\n    return React.createElement(SignUpFlow, {\n      firstName: firstName,\n      onChangeFirstName: onChangeFirstName,\n      courtDate: courtDate,\n      onChangeCourtDate: onChangeCourtDate,\n      courtLocation: courtLocation,\n      onChangeCourtLocation: onChangeCourtLocation,\n      courtTime: courtTime,\n      onChangeCourtTime: onChangeCourtTime,\n      setisSignUpFlow: setisSignUpFlow,\n      isMoodPicker: isMoodPicker,\n      setIsMoodPicker: setIsMoodPicker,\n      mood: mood,\n      setMood: setMood,\n      childCare: childCare,\n      onChangeChildCare: onChangeChildCare,\n      car: car,\n      onChangeCar: onChangeCar,\n      legalRep: legalRep,\n      onChangeLegalRep: onChangeLegalRep,\n      title: {\n        title: 'Sign Up'\n      }\n    });\n  } else if (isMoodPicker) {\n    return React.createElement(MoodPicker, {\n      mood: mood,\n      setIsMoodPicker: setIsMoodPicker,\n      setMood: setMood\n    });\n  } else {\n    return React.createElement(NavigationContainer, null, React.createElement(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n\n            if (route.name === 'Home') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'home' : 'home-outline',\n                size: size * 1.1,\n                color: color\n              });\n            } else if (route.name === 'Tasks') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'checkmark-circle' : 'checkmark-circle-outline',\n                size: size * 1.1,\n                color: color\n              });\n            } else if (route.name === ' ') {\n              return React.createElement(View, {\n                style: [{\n                  backgroundColor: 'white',\n                  width: \"90%\",\n                  height: \"175%\",\n                  borderRadius: \"100%\",\n                  display: \"flex\",\n                  zIndex: 4,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  shadowColor: \"black\",\n                  boxShadow: \"0px 0px 5px #4F403D\"\n                }, styles.dropShadow]\n              }, React.createElement(Ionicons, {\n                name: focused ? 'bookmark' : 'bookmark-outline',\n                size: size * 1.5,\n                color: \"#779391\"\n              }));\n            } else if (route.name === 'Forum') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'chatbubbles' : 'chatbubbles-outline',\n                size: size * 1.1,\n                color: color\n              });\n            } else if (route.name === 'Settings') {\n              return React.createElement(Ionicons, {\n                name: focused ? 'settings' : 'settings-outline',\n                size: size * 1.1,\n                color: color\n              });\n            }\n          },\n          tabBarInactiveTintColor: 'white',\n          tabBarActiveTintColor: 'white',\n          tabBarActiveBackgroundColor: '#779391',\n          tabBarInactiveBackgroundColor: '#779391',\n          tabBarLabelStyle: {\n            marginBottom: 7\n          },\n          tabBarStyle: {\n            marginBottom: -30,\n            borderTopWidth: 0,\n            shadowColor: '#000',\n            shadowOffset: {\n              width: 0,\n              height: -2\n            },\n            shadowOpacity: 0.4,\n            shadowRadius: 3,\n            height: 90\n          }\n        };\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"Home\"\n    }, function (props) {\n      return React.createElement(HomeScreen, _extends({}, props, {\n        mood: mood,\n        firstName: firstName,\n        courtDate: courtDate,\n        setIsMoodPicker: setIsMoodPicker\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"Tasks\"\n    }, function (props) {\n      return React.createElement(TaskScreen, _extends({}, props, {\n        mood: mood,\n        setSelectedCategory: setSelectedCategory,\n        selectedCategory: selectedCategory\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \" \"\n    }, function (props) {\n      return React.createElement(MyPlanScreen, _extends({}, props, {\n        mood: mood,\n        setIsMoodPicker: setIsMoodPicker,\n        courtDate: courtDate,\n        courtTime: courtTime,\n        courtLocation: courtLocation,\n        childCare: childCare\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"Forum\"\n    }, function (props) {\n      return React.createElement(MessageBoardScreen, _extends({}, props, {\n        firstName: firstName,\n        courtDate: courtDate,\n        courtLocation: courtLocation,\n        courtTime: courtTime,\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      firstName: firstName,\n      courtDate: courtDate,\n      courtLocation: courtLocation,\n      courtTime: courtTime\n    })));\n  }\n}","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/App.js"],"names":["React","useState","useEffect","Ionicons","NavigationContainer","createBottomTabNavigator","HomeScreen","SignUpFlow","MoodPicker","MyPlanScreen","MessageBoardScreen","TaskScreen","MakeAPost","SettingsScreen","styles","StyleSheet","create","dropShadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","Tab","App","isSignUpFlow","setisSignUpFlow","isMoodPicker","setIsMoodPicker","mood","setMood","firstName","onChangeFirstName","courtDate","onChangeCourtDate","courtLocation","onChangeCourtLocation","courtTime","onChangeCourtTime","childCare","onChangeChildCare","selectedCategory","setSelectedCategory","car","onChangeCar","legalRep","onChangeLegalRep","title","route","headerShown","tabBarIcon","focused","color","size","name","backgroundColor","borderRadius","display","zIndex","alignItems","justifyContent","boxShadow","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","tabBarLabelStyle","marginBottom","tabBarStyle","borderTopWidth","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from './screens/HomeScreen';\nimport SignUpFlow from './screens/SignUpFlow';\nimport MoodPicker from './screens/MoodPicker';\nimport MyPlanScreen from './screens/MyPlanScreen';\nimport MessageBoardScreen from './screens/MessageBoardScreen';\nimport TaskScreen from './screens/TasksScreen';\nimport MakeAPost from './screens/MakeAPost';\nimport SettingsScreen from './screens/Settings'\n\nconst styles = StyleSheet.create({\n  dropShadow:  {\n    shadowColor: '#171717',\n    shadowOffset: {width: -2, height: 4},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n  }\n})\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n    const [isSignUpFlow, setisSignUpFlow] = useState(true);\n    const [isMoodPicker, setIsMoodPicker] = useState(false);\n\n    const [mood, setMood] = useState('productive');\n\n    const [firstName, onChangeFirstName] = useState(\"\");\n    const [courtDate, onChangeCourtDate] = useState(\"\");\n    const [courtLocation, onChangeCourtLocation] = useState(\"\");\n    const [courtTime, onChangeCourtTime] = useState(\"\");\n    const [childCare, onChangeChildCare] = useState(\"\");\n    const [selectedCategory, setSelectedCategory] = useState('none');\n\n    const [car, onChangeCar] = React.useState(false)\n    const [legalRep, onChangeLegalRep] = React.useState(false)\n\n\n    if (isSignUpFlow) {\n        return  (\n        <SignUpFlow\n            firstName={firstName}\n            onChangeFirstName={onChangeFirstName}\n            courtDate={courtDate}\n            onChangeCourtDate={onChangeCourtDate}\n            courtLocation={courtLocation}\n            onChangeCourtLocation={onChangeCourtLocation}\n            courtTime={courtTime}\n            onChangeCourtTime={onChangeCourtTime}\n            setisSignUpFlow={setisSignUpFlow}\n            isMoodPicker={isMoodPicker}\n            setIsMoodPicker={setIsMoodPicker}\n            mood={mood}\n            setMood={setMood}\n            childCare={childCare}\n            onChangeChildCare={onChangeChildCare}\n            car={car}\n            onChangeCar={onChangeCar}\n            legalRep={legalRep}\n            onChangeLegalRep={onChangeLegalRep}\n            title={{title: 'Sign Up'}}/>\n        );\n    } else if (isMoodPicker) {\n      return (\n        <MoodPicker mood={mood} setIsMoodPicker={setIsMoodPicker} setMood={setMood} />\n      );\n    } else {\n    return (\n        <NavigationContainer>\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n            headerShown: false,\n            tabBarIcon: ({ focused, color, size }) => {\n                if (route.name === 'Home') {\n                return (\n                    <Ionicons\n                    name={focused ? 'home' : 'home-outline'}\n                    size={size * 1.1}\n                    color={color}\n                    />\n                );\n                } else if (route.name === 'Tasks') {\n                return (\n                    <Ionicons\n                    name={focused ? 'checkmark-circle' : 'checkmark-circle-outline'}\n                    size={size * 1.1}\n                    color={color}\n                    />\n                );\n\n                // Not sure if this is the best way to handle this, but I don't want\n                // text under the bookmark icon so it seems like the best solution is\n                // to name this route \" \" so no text shows up\n              } else if (route.name === ' ') {\n                return (\n                    <View style={[{\n                    backgroundColor: 'white',\n                    width: \"90%\",\n                    height: \"175%\",\n                    borderRadius: \"100%\",\n                    display: \"flex\",\n                    zIndex: 4,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    shadowColor: \"black\",\n                    boxShadow: \"0px 0px 5px #4F403D\",\n\n                    }, styles.dropShadow]}>\n                    <Ionicons\n                        name={focused ? 'bookmark' : 'bookmark-outline'}\n                        size={size * 1.5}\n                        color={\"#779391\"}\n                    />\n                    </View>\n                );\n                } else if (route.name === 'Forum') {\n                return (\n                    <Ionicons\n                    name={focused ? 'chatbubbles' : 'chatbubbles-outline'}\n                    size={size * 1.1}\n                    color={color}\n                    />\n                );\n                } else if (route.name === 'Settings') {\n                return (\n                    <Ionicons\n                    name={focused ? 'settings' : 'settings-outline'}\n                    size={size * 1.1}\n                    color={color}\n                    />\n                );\n                }\n            },\n            tabBarInactiveTintColor: 'white',\n            tabBarActiveTintColor: 'white',\n            tabBarActiveBackgroundColor: '#779391',\n            tabBarInactiveBackgroundColor: '#779391',\n            tabBarLabelStyle: { marginBottom: 7 },\n            tabBarStyle: { marginBottom: -30, borderTopWidth: 0, shadowColor: '#000', shadowOffset: {width: 0, height: -2}, shadowOpacity: 0.4, shadowRadius: 3, height: 90},\n            })}\n        >\n            <Tab.Screen name=\"Home\">\n              {props => <HomeScreen {...props} mood={mood} firstName={firstName} courtDate={courtDate} setIsMoodPicker={setIsMoodPicker } />}\n            </Tab.Screen>\n            <Tab.Screen name=\"Tasks\" >\n            {props => <TaskScreen {...props}\n                mood={mood}\n                setSelectedCategory={setSelectedCategory}\n                selectedCategory={selectedCategory}\n            />}\n              </Tab.Screen>\n            <Tab.Screen name=\" \">\n              {props => <MyPlanScreen {...props} mood={mood} setIsMoodPicker={setIsMoodPicker}\n                        courtDate={courtDate} courtTime={courtTime} courtLocation={courtLocation}\n                        childCare={childCare} />}\n            </Tab.Screen>\n            <Tab.Screen name=\"Forum\">\n              {props => <MessageBoardScreen\n                {...props}\n                firstName={firstName}\n                courtDate={courtDate}\n                courtLocation={courtLocation}\n                courtTime={courtTime}\n                selectedCategory={selectedCategory}\n                setSelectedCategory={setSelectedCategory}\n              />}\n            </Tab.Screen>\n            <Tab.Screen\n                name=\"Settings\"\n                component={SettingsScreen}\n                firstName={firstName}\n                courtDate={courtDate}\n                courtLocation={courtLocation}\n                courtTime={courtTime}\n            />\n        </Tab.Navigator>\n        </NavigationContainer>\n    );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}