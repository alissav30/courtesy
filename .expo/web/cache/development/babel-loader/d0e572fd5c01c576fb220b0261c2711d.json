{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { CheckBox } from 'react-native-elements';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { TextInputMask } from 'react-native-masked-text';\nimport { courtDatePosts, contactCourtPosts, legalHelpPosts, transportationPosts, testimonialPosts, otherPosts } from \"../utils\";\n\nvar swoopBackground = require(\"./tasks_background.png\");\n\nvar categories = ['court date information', 'contacting court', 'transportation', 'testimonials', 'legal help', 'other'];\n\nfunction handleSubmitPost(title, description, category) {\n  var newPost = {\n    title: title,\n    description: description,\n    upvotes: 0,\n    comments: []\n  };\n\n  switch (category) {\n    case 'court date information':\n      courtDatePosts.push(newPost);\n\n    case 'contacting court':\n      contactCourtPosts.push(newPost);\n\n    case 'legal help':\n      legalHelpPosts.push(newPost);\n\n    case 'transportation':\n      transportationPosts.push(newPost);\n\n    case 'testimonials':\n      testimonialPosts.push(newPost);\n\n    default:\n      otherPosts.push(newPost);\n  }\n}\n\nvar MakeAPost = function MakeAPost(_ref) {\n  var navigation = _ref.navigation,\n      setMakeNewPost = _ref.setMakeNewPost;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isAnonymous = _React$useState2[0],\n      setIsAnonymous = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      postTitle = _React$useState4[0],\n      setPostTitle = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      postDescription = _React$useState6[0],\n      setPostDescription = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      category = _React$useState8[0],\n      setCategory = _React$useState8[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: '#768A89'\n    }\n  }, React.createElement(View, null, React.createElement(TouchableOpacity, {\n    style: [{\n      top: 80,\n      left: 20,\n      width: '25%',\n      height: '22%',\n      borderRadius: '16px',\n      justifyContent: 'center',\n      borderColor: '#FFFFFF',\n      borderWidth: 1\n    }],\n    onPress: function onPress() {\n      return setMakeNewPost(false);\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 14,\n      fontWeight: 'bold',\n      alignSelf: 'center'\n    }\n  }, \"  \\u2190  BACK \")))), React.createElement(View, null, React.createElement(Text, {\n    style: [styles.makeAPostHeader, {\n      color: '#F8F9FA'\n    }]\n  }, \"make a post\")), React.createElement(View, {\n    style: styles.topic\n  }, React.createElement(Text, {\n    style: styles.header\n  }, \"TOPIC\"), React.createElement(View, {\n    style: styles.dropdown\n  }, React.createElement(SelectDropdown, {\n    data: categories,\n    onSelect: function onSelect(selectedItem, index) {\n      setCategory(selectedItem);\n    },\n    defaultButtonText: \"Select category\",\n    buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n      return selectedItem;\n    },\n    rowTextForSelection: function rowTextForSelection(item, index) {\n      return item;\n    },\n    buttonStyle: styles.dropdown1BtnStyle,\n    buttonTextStyle: styles.dropdown1BtnTxtStyle,\n    renderDropdownIcon: function renderDropdownIcon(isOpened) {\n      return React.createElement(FontAwesome, {\n        name: isOpened ? \"chevron-up\" : \"chevron-down\",\n        color: \"#DEE2E6\",\n        size: 18\n      });\n    },\n    dropdownIconPosition: \"right\",\n    dropdownStyle: styles.dropdown1DropdownStyle,\n    rowStyle: styles.dropdown1RowStyle,\n    rowTextStyle: styles.dropdown1RowTxtStyle\n  }))), React.createElement(View, null, React.createElement(Text, {\n    style: styles.header\n  }, \"GIVE YOUR POST A TITLE\"), React.createElement(TextInput, {\n    style: [styles.titleBox, styles.dropShadow],\n    onChangeText: setPostTitle,\n    value: postTitle ? postTitle : \"\"\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: [styles.header, styles.descriptionHeader]\n  }, \"DESCRIPTION\"), React.createElement(TextInput, {\n    style: [styles.descriptionBox, styles.dropShadow],\n    onChangeText: setPostDescription,\n    value: postDescription ? postDescription : \"\",\n    textAlignVertical: 'top',\n    multiline: true\n  })), React.createElement(View, null, React.createElement(CheckBox, {\n    title: \"Make this post anonymous\",\n    style: styles.checkbox,\n    checkedColor: \"#fff\",\n    containerStyle: {\n      borderWidth: 0,\n      backgroundColor: '#768A89',\n      marginBottom: 80\n    },\n    textStyle: {\n      color: '#DEE2E6',\n      fontSize: 18,\n      fontWeight: '400'\n    },\n    checked: isAnonymous,\n    onPress: function onPress() {\n      return setIsAnonymous(!isAnonymous);\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.postButton, styles.dropShadow, {\n      height: \"20%\",\n      width: '27%',\n      borderRadius: '20px',\n      justifyContent: 'center',\n      backgroundColor: 'white'\n    }]\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#768A89',\n      fontSize: 14,\n      fontWeight: 'bold',\n      alignSelf: 'center'\n    },\n    onPress: function onPress() {\n      handleSubmitPost(postTitle, postDescription, category);\n      setPostTitle('');\n      setPostDescription('');\n      setCategory('');\n      setMakeNewPost(false);\n    }\n  }, \" POST \")))));\n};\n\nvar styles = StyleSheet.create({\n  backButton: {\n    borderColor: \"#FFFFFF\",\n    borderRadius: 30\n  },\n  makeAPostHeader: {\n    textAlign: 'center',\n    fontSize: 26,\n    lineHeight: 31,\n    top: -45\n  },\n  dropShadow: {\n    shadowColor: '#00000040',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3\n  },\n  header: {\n    color: '#F8F9FA',\n    fontSize: 18,\n    lineHeight: 22,\n    fontWeight: '600',\n    left: 20,\n    marginBottom: 10,\n    marginTop: 10,\n    top: -30\n  },\n  dropdown: {\n    marginLeft: 20,\n    borderRadius: 50,\n    width: '100%',\n    top: -30,\n    marginBottom: 20\n  },\n  titleBox: {\n    left: 20,\n    borderWidth: 2,\n    width: '90%',\n    height: 40,\n    borderColor: '#DEE2E6',\n    borderRadius: 9,\n    color: 'white',\n    top: -30,\n    paddingLeft: 10,\n    marginBottom: 20\n  },\n  checkbox: {\n    color: 'white',\n    width: '100%'\n  },\n  descriptionBox: {\n    left: 20,\n    borderWidth: 2,\n    width: '90%',\n    height: 100,\n    borderColor: '#DEE2E6',\n    borderRadius: 9,\n    color: 'white',\n    top: -30,\n    padding: 10,\n    paddingTop: 10\n  },\n  postButton: {\n    alignSelf: 'center'\n  },\n  underline: {\n    textDecorationLine: 'underline'\n  },\n  dropdown1BtnStyle: {\n    width: \"90%\",\n    height: 42,\n    backgroundColor: \"#768A89\",\n    borderRadius: 9,\n    borderWidth: 2,\n    borderColor: \"#DEE2E6\"\n  },\n  dropdown1BtnTxtStyle: {\n    color: \"#DEE2E6\",\n    textAlign: \"left\"\n  },\n  dropdown1DropdownStyle: {\n    backgroundColor: \"#EFEFEF\"\n  },\n  dropdown1RowStyle: {\n    backgroundColor: \"#EFEFEF\",\n    borderBottomColor: \"#C5C5C5\"\n  },\n  dropdown1RowTxtStyle: {\n    color: \"#444\",\n    textAlign: \"left\"\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    marginBottom: 0,\n    marginTop: 20\n  },\n  checkbox: {\n    alignSelf: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default MakeAPost;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/MakeAPost.js"],"names":["React","SelectDropdown","CheckBox","FontAwesome","TextInputMask","courtDatePosts","contactCourtPosts","legalHelpPosts","transportationPosts","testimonialPosts","otherPosts","swoopBackground","require","categories","handleSubmitPost","title","description","category","newPost","upvotes","comments","push","MakeAPost","navigation","setMakeNewPost","useState","isAnonymous","setIsAnonymous","postTitle","setPostTitle","postDescription","setPostDescription","setCategory","flex","padding","backgroundColor","top","left","width","height","borderRadius","justifyContent","borderColor","borderWidth","flexDirection","color","fontSize","fontWeight","alignSelf","styles","makeAPostHeader","topic","header","dropdown","selectedItem","index","item","dropdown1BtnStyle","dropdown1BtnTxtStyle","isOpened","dropdown1DropdownStyle","dropdown1RowStyle","dropdown1RowTxtStyle","titleBox","dropShadow","descriptionHeader","descriptionBox","checkbox","marginBottom","postButton","StyleSheet","create","backButton","textAlign","lineHeight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginTop","marginLeft","paddingLeft","paddingTop","underline","textDecorationLine","borderBottomColor","checkboxContainer","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport SelectDropdown from 'react-native-select-dropdown'\r\nimport {\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n} from 'react-native';\r\nimport { CheckBox } from 'react-native-elements'\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport { courtDatePosts, contactCourtPosts, legalHelpPosts, transportationPosts, testimonialPosts, otherPosts } from '../utils';\r\n\r\n\r\nconst swoopBackground = require(\"./tasks_background.png\");\r\n\r\nconst categories = ['court date information', 'contacting court', 'transportation', 'testimonials', 'legal help', 'other'];\r\n\r\nfunction handleSubmitPost(title, description, category) {\r\n  const newPost = {\r\n    title: title,\r\n    description: description,\r\n    upvotes: 0,\r\n    comments: []\r\n  };\r\n  switch (category) {\r\n    case 'court date information':\r\n      courtDatePosts.push(newPost);\r\n    case 'contacting court':\r\n      contactCourtPosts.push(newPost);\r\n    case 'legal help':\r\n      legalHelpPosts.push(newPost);\r\n    case 'transportation':\r\n      transportationPosts.push(newPost);\r\n    case 'testimonials':\r\n      testimonialPosts.push(newPost);\r\n    default:\r\n      otherPosts.push(newPost);\r\n  }\r\n}\r\n\r\nconst MakeAPost = ({ navigation, setMakeNewPost }) => {\r\n  const [isAnonymous, setIsAnonymous] = React.useState(false);\r\n  const [postTitle, setPostTitle] = React.useState('');\r\n  const [postDescription, setPostDescription] = React.useState('');\r\n  const [category, setCategory] = React.useState('');\r\n\r\n  return (\r\n      <View style={{ flex: 1, padding: 0, backgroundColor: '#768A89' }}>\r\n        <View>\r\n            <TouchableOpacity style={[\r\n                { top: 80, left: 20, width: '25%', height: '22%', borderRadius: '16px', justifyContent: 'center', borderColor: '#FFFFFF',  borderWidth: 1,}\r\n            ]} onPress={() => setMakeNewPost(false)}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\r\n                <Text style={{ color: \"white\", fontSize: 14, fontWeight: 'bold', alignSelf: 'center' }}>  ←  BACK </Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n        <View>\r\n            <Text style={[styles.makeAPostHeader, {color: '#F8F9FA'}]}>make a post</Text>\r\n        </View>\r\n        <View style={styles.topic}>\r\n            <Text style={styles.header}>TOPIC</Text>\r\n            <View  style={styles.dropdown}>\r\n                <SelectDropdown\r\n                  data={categories}\r\n                  onSelect={(selectedItem, index) => {\r\n                    setCategory(selectedItem);\r\n                  }}\r\n                  defaultButtonText={\"Select category\"}\r\n                  buttonTextAfterSelection={(selectedItem, index) => {\r\n                    return selectedItem;\r\n                  }}\r\n                  rowTextForSelection={(item, index) => {\r\n                    return item;\r\n                  }}\r\n                  buttonStyle={styles.dropdown1BtnStyle}\r\n                  buttonTextStyle={styles.dropdown1BtnTxtStyle}\r\n                  renderDropdownIcon={(isOpened) => {\r\n                    return (\r\n                      <FontAwesome\r\n                        name={isOpened ? \"chevron-up\" : \"chevron-down\"}\r\n                        color={\"#DEE2E6\"}\r\n                        size={18}\r\n                      />\r\n                    );\r\n                  }}\r\n                  dropdownIconPosition={\"right\"}\r\n                  dropdownStyle={styles.dropdown1DropdownStyle}\r\n                  rowStyle={styles.dropdown1RowStyle}\r\n                  rowTextStyle={styles.dropdown1RowTxtStyle}\r\n                />\r\n            </View>\r\n        </View>\r\n        <View>\r\n            <Text style={styles.header}>GIVE YOUR POST A TITLE</Text>\r\n            <TextInput\r\n                style={[styles.titleBox, styles.dropShadow]}\r\n                onChangeText={setPostTitle}\r\n                value={postTitle ? postTitle : \"\"}\r\n            />\r\n        </View>\r\n        <View>\r\n            <Text style={[styles.header, styles.descriptionHeader]}>DESCRIPTION</Text>\r\n            <TextInput\r\n                style={[styles.descriptionBox, styles.dropShadow]}\r\n                onChangeText={setPostDescription}\r\n                value={postDescription ? postDescription : \"\"}\r\n                textAlignVertical={'top'}\r\n                multiline\r\n            />\r\n        </View>\r\n\r\n        <View>\r\n        {/* <View style={styles.checkbox}> */}\r\n        <CheckBox\r\n            //style={{ flex: 1, padding: 10, color: '#DEE2E6' }}\r\n            // onClick={()=>{\r\n            // this.setState({\r\n            //     isChecked:!this.state.isChecked\r\n            // })\r\n            // }}\r\n            // isChecked={this.state.isChecked}\r\n            title=\"Make this post anonymous\"\r\n            style={styles.checkbox}\r\n            checkedColor=\"#fff\"\r\n            containerStyle={{ borderWidth: 0, backgroundColor: '#768A89', marginBottom: 80 }}\r\n            textStyle={{\r\n                color: '#DEE2E6',\r\n                fontSize: 18,\r\n                fontWeight: '400',\r\n            }}\r\n            checked={isAnonymous}\r\n            onPress={() => setIsAnonymous(!isAnonymous)}\r\n        />\r\n        {/* </View> */}\r\n\r\n        <TouchableOpacity style={[\r\n            styles.postButton,\r\n            styles.dropShadow,\r\n            { height: \"20%\", width:'27%', borderRadius: '20px', justifyContent: 'center', backgroundColor: 'white' }\r\n          ]}>\r\n            <View style={{ flexDirection: 'row', justifyContent: 'space-around'}}>\r\n              <Text style={{ color: '#768A89', fontSize: 14, fontWeight: 'bold', alignSelf: 'center' }} onPress={() => {\r\n                handleSubmitPost(postTitle, postDescription, category);\r\n                setPostTitle('');\r\n                setPostDescription('');\r\n                setCategory('');\r\n                setMakeNewPost(false);\r\n              }}> POST </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    backButton: {\r\n        borderColor: \"#FFFFFF\",\r\n        borderRadius: 30,\r\n    },\r\n    makeAPostHeader: {\r\n        textAlign: 'center',\r\n        fontSize: 26,\r\n        lineHeight: 31,\r\n        top: -45,\r\n    },\r\n    dropShadow:  {\r\n        shadowColor: '#00000040',\r\n        shadowOffset: {width: 0, height: 4},\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 3,\r\n    },\r\n    header: {\r\n        color: '#F8F9FA',\r\n        fontSize: 18,\r\n        lineHeight: 22,\r\n        fontWeight: '600',\r\n        left: 20,\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        top: -30,\r\n    },\r\n    dropdown: {\r\n        marginLeft: 20,\r\n        borderRadius: 50,\r\n        width: '100%',\r\n        top: -30,\r\n        marginBottom: 20,\r\n    },\r\n    titleBox: {\r\n        left: 20,\r\n        borderWidth: 2,\r\n        width: '90%',\r\n        height: 40,\r\n        borderColor: '#DEE2E6',\r\n        borderRadius: 9,\r\n        color: 'white',\r\n        top: -30,\r\n        paddingLeft: 10,\r\n        marginBottom: 20,\r\n    },\r\n    checkbox: {\r\n        color: 'white',\r\n        width: '100%',\r\n    },\r\n    descriptionBox: {\r\n      left: 20,\r\n      borderWidth: 2,\r\n      width: '90%',\r\n      height: 100,\r\n      borderColor: '#DEE2E6',\r\n      borderRadius: 9,\r\n      color: 'white',\r\n      top: -30,\r\n      padding: 10,\r\n      paddingTop: 10,\r\n    },\r\n    postButton: {\r\n      alignSelf: 'center',\r\n    },\r\n    underline: {textDecorationLine: 'underline'},\r\n    dropdown1BtnStyle: {\r\n      width: \"90%\",\r\n      height: 42,\r\n      backgroundColor: \"#768A89\",\r\n      borderRadius: 9,\r\n      borderWidth: 2,\r\n      borderColor: \"#DEE2E6\",\r\n    },\r\n    dropdown1BtnTxtStyle: { color: \"#DEE2E6\", textAlign: \"left\" },\r\n    dropdown1DropdownStyle: { backgroundColor: \"#EFEFEF\" },\r\n    dropdown1RowStyle: {\r\n      backgroundColor: \"#EFEFEF\",\r\n      borderBottomColor: \"#C5C5C5\",\r\n    },\r\n    dropdown1RowTxtStyle: { color: \"#444\", textAlign: \"left\" },\r\n    checkboxContainer: {\r\n        flexDirection: \"row\",\r\n        marginBottom: 0,\r\n        marginTop: 20\r\n        //justifyContent: \"center\",\r\n      },\r\n      checkbox: {\r\n        alignSelf: \"center\",\r\n        alignItems: \"center\"\r\n      },\r\n\r\n});\r\n\r\nexport default MakeAPost;\r\n"]},"metadata":{},"sourceType":"module"}