{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getCountdownDays, homeScreenMoods, moods } from \"../utils\";\nimport TransportationTaskPage from \"./TransportationTaskPage\";\n\nvar swoopBackground = require(\"./Message_Board_Background.png\");\n\nvar TasksScreen = function TasksScreen(_ref) {\n  var navigation = _ref.navigation,\n      mood = _ref.mood,\n      selectedCategory = _ref.selectedCategory,\n      setSelectedCategory = _ref.setSelectedCategory;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isTransportationTask = _React$useState2[0],\n      setIsTransportationTask = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      nextScreen = _React$useState4[0],\n      setNextScreen = _React$useState4[1];\n\n  var moodKey = mood;\n\n  if (moods.indexOf(mood) == -1) {\n    moodKey = \"other\";\n  }\n\n  if (isTransportationTask == false) {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      }\n    }, React.createElement(ImageBackground, {\n      source: swoopBackground,\n      style: {\n        width: '102%',\n        height: '103%',\n        left: -1\n      }\n    }, React.createElement(Text, {\n      style: {\n        top: 65,\n        color: 'white',\n        fontSize: 30,\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica',\n        textAlign: 'center'\n      }\n    }, \" TASKS \"), React.createElement(View, {\n      style: {\n        flex: 0.75\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        marginTop: 150,\n        marginBottom: 50,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.dailyTasksModule,\n      onPress: function onPress() {\n        return setIsTransportationTask(true);\n      }\n    }, React.createElement(View, {\n      style: styles.dailyTasksHeader\n    }, React.createElement(Text, {\n      style: styles.tasksText\n    }, \" Task of the Day \")), React.createElement(Text, {\n      style: styles.subtasksText\n    }, \" Take some time to consider your transportation options for court. \"))), React.createElement(View, {\n      style: {\n        flex: 1,\n        marginTop: 150,\n        marginBottom: 50,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.previousTasksModule\n    }, React.createElement(View, {\n      style: styles.previousTasksHeader\n    }, React.createElement(Text, {\n      style: styles.tasksText\n    }, \" Previous Tasks \")), React.createElement(Text, {\n      style: styles.subtasksText\n    }, \" None so far! \"))))));\n  } else {\n    return React.createElement(TransportationTaskPage, {\n      setSelectedCategory: setSelectedCategory,\n      selectedCategory: selectedCategory,\n      nextScreen: nextScreen,\n      setNextScreen: setNextScreen\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  dailyTasksModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 155,\n    width: '90%',\n    justifyContent: 'center'\n  },\n  previousTasksModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 135,\n    width: '90%',\n    justifyContent: 'center'\n  },\n  dailyTasksHeader: {\n    backgroundColor: 'white'\n  },\n  previousTasksHeader: {\n    backgroundColor: 'white',\n    marginTop: 0\n  },\n  tasksText: {\n    color: '#8AB5B2',\n    fontSize: 26,\n    textAlign: 'center',\n    alignSelf: 'center',\n    marginBottom: 10,\n    marginTop: 10\n  },\n  subtasksText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center',\n    alignSelf: 'center',\n    marginTop: 15\n  }\n});\nexport default TasksScreen;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/TasksScreen.js"],"names":["React","MapView","Marker","Ionicons","getCountdownDays","homeScreenMoods","moods","TransportationTaskPage","swoopBackground","require","TasksScreen","navigation","mood","selectedCategory","setSelectedCategory","useState","isTransportationTask","setIsTransportationTask","nextScreen","setNextScreen","moodKey","indexOf","flex","width","height","left","top","color","fontSize","fontWeight","fontFamily","textAlign","marginTop","marginBottom","justifyContent","alignItems","styles","dailyTasksModule","dailyTasksHeader","tasksText","subtasksText","previousTasksModule","previousTasksHeader","StyleSheet","create","backgroundColor","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderRadius","alignSelf"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;AAUA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,KAA5C;AACA,OAAOC,sBAAP;;AAKA,IAAMC,eAAe,GAAGC,OAAO,kCAA/B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiE;AAAA,MAA9DC,UAA8D,QAA9DA,UAA8D;AAAA,MAAlDC,IAAkD,QAAlDA,IAAkD;AAAA,MAA5CC,gBAA4C,QAA5CA,gBAA4C;AAAA,MAA1BC,mBAA0B,QAA1BA,mBAA0B;;AACrF,wBAAwDd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAxD;AAAA;AAAA,MAAOC,oBAAP;AAAA,MAA6BC,uBAA7B;;AACA,yBAAoCjB,KAAK,CAACe,QAAN,CAAe,EAAf,CAApC;AAAA;AAAA,MAAOG,UAAP;AAAA,MAAmBC,aAAnB;;AAGE,MAAIC,OAAO,GAAGR,IAAd;;AACA,MAAIN,KAAK,CAACe,OAAN,CAAcT,IAAd,KAAuB,CAAC,CAA5B,EAA+B;AAC7BQ,IAAAA,OAAO,GAAG,OAAV;AACD;;AACD,MAAIJ,oBAAoB,IAAI,KAA5B,EAAmC;AACjC,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,IAAI,EAAE;AAAR;AAAb,OACE,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAEd,eAAzB;AAA0C,MAAA,KAAK,EAAE;AAACe,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE,MAAxB;AAAgCC,QAAAA,IAAI,EAAE,CAAC;AAAvC;AAAjD,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,OAAlB;AAA2BC,QAAAA,QAAQ,EAAE,EAArC;AAAyCC,QAAAA,UAAU,EAAE,MAArD;AAA6DC,QAAAA,UAAU,EAAE,WAAzE;AAAsFC,QAAAA,SAAS,EAAE;AAAjG;AAAb,iBADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAET,QAAAA,IAAI,EAAE;AAAR;AAAb,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE,CAAR;AAAWU,QAAAA,SAAS,EAAE,GAAtB;AAA2BC,QAAAA,YAAY,EAAE,EAAzC;AAA6CC,QAAAA,cAAc,EAAE,eAA7D;AAA8EC,QAAAA,UAAU,EAAE;AAA1F;AAAb,OACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACC,gBAAhC;AACA,MAAA,OAAO,EAAE;AAAA,eAAMpB,uBAAuB,CAAC,IAAD,CAA7B;AAAA;AADT,OAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEmB,MAAM,CAACE;AAApB,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,2BADJ,CAFJ,EAKI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,6EALJ,CADJ,CADJ,EAUI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAElB,QAAAA,IAAI,EAAE,CAAR;AAAWU,QAAAA,SAAS,EAAE,GAAtB;AAA2BC,QAAAA,YAAY,EAAE,EAAzC;AAA6CC,QAAAA,cAAc,EAAE,eAA7D;AAA8EC,QAAAA,UAAU,EAAE;AAA1F;AAAb,OACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACK;AAAhC,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACG;AAApB,0BADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,wBAJJ,CADJ,CAVJ,CAFF,CADF,CADJ;AA0BD,GA3BD,MA4BO;AACD,WAAQ,oBAAC,sBAAD;AACJ,MAAA,mBAAmB,EAAE1B,mBADjB;AAEJ,MAAA,gBAAgB,EAAED,gBAFd;AAGJ,MAAA,UAAU,EAAEK,UAHR;AAIJ,MAAA,aAAa,EAAEC;AAJX,MAAR;AAKH;AAEJ,CA7CD;;AA+CA,IAAMiB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,gBAAgB,EAAE;AAChBQ,IAAAA,eAAe,EAAE,SADD;AAEhBC,IAAAA,WAAW,EAAE,CAFG;AAGhBC,IAAAA,WAAW,EAAE,0BAHG;AAIhBC,IAAAA,WAAW,EAAE,MAJG;AAKhBC,IAAAA,YAAY,EAAE;AAAC1B,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KALE;AAMhB0B,IAAAA,aAAa,EAAE,GANC;AAOhBC,IAAAA,YAAY,EAAE,CAPE;AAQhBC,IAAAA,YAAY,EAAE,EARE;AAShB5B,IAAAA,MAAM,EAAE,GATQ;AAUhBD,IAAAA,KAAK,EAAE,KAVS;AAWhBW,IAAAA,cAAc,EAAE;AAXA,GADa;AAc/BO,EAAAA,mBAAmB,EAAE;AACnBI,IAAAA,eAAe,EAAE,SADE;AAEnBC,IAAAA,WAAW,EAAE,CAFM;AAGnBC,IAAAA,WAAW,EAAE,0BAHM;AAInBC,IAAAA,WAAW,EAAE,MAJM;AAKnBC,IAAAA,YAAY,EAAE;AAAC1B,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KALK;AAMnB0B,IAAAA,aAAa,EAAE,GANI;AAOnBC,IAAAA,YAAY,EAAE,CAPK;AAQnBC,IAAAA,YAAY,EAAE,EARK;AASnB5B,IAAAA,MAAM,EAAE,GATW;AAUnBD,IAAAA,KAAK,EAAE,KAVY;AAWnBW,IAAAA,cAAc,EAAE;AAXG,GAdU;AA2B/BI,EAAAA,gBAAgB,EAAE;AACdO,IAAAA,eAAe,EAAE;AADH,GA3Ba;AA8B/BH,EAAAA,mBAAmB,EAAE;AACnBG,IAAAA,eAAe,EAAE,OADE;AAEnBb,IAAAA,SAAS,EAAE;AAFQ,GA9BU;AAkC/BO,EAAAA,SAAS,EAAE;AACTZ,IAAAA,KAAK,EAAE,SADE;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTG,IAAAA,SAAS,EAAE,QAHF;AAITsB,IAAAA,SAAS,EAAE,QAJF;AAKTpB,IAAAA,YAAY,EAAE,EALL;AAMTD,IAAAA,SAAS,EAAC;AAND,GAlCoB;AA0C/BQ,EAAAA,YAAY,EAAE;AACZb,IAAAA,KAAK,EAAE,OADK;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZG,IAAAA,SAAS,EAAE,QAHC;AAIZsB,IAAAA,SAAS,EAAE,QAJC;AAKZrB,IAAAA,SAAS,EAAE;AALC;AA1CiB,CAAlB,CAAf;AAmDA,eAAetB,WAAf","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  ImageBackground,\n  Dimensions,\n} from 'react-native';\nimport MapView from 'react-native-maps';\nimport { Marker } from 'react-native-maps';\nimport { Ionicons } from '@expo/vector-icons';\nimport { getCountdownDays, homeScreenMoods, moods } from '../utils';\nimport TransportationTaskPage from \"./TransportationTaskPage\";\n\n//import MessageBoardScreen from './screens/MessageBoardScreen';\n\n\nconst swoopBackground = require(\"./Message_Board_Background.png\");\n\nconst TasksScreen = ({ navigation, mood, selectedCategory, setSelectedCategory }) => {\nconst [isTransportationTask, setIsTransportationTask] = React.useState(false)\nconst [nextScreen, setNextScreen] = React.useState(\"\")\n\n\n  let moodKey = mood;\n  if (moods.indexOf(mood) == -1) {\n    moodKey = \"other\";\n  }\n  if (isTransportationTask == false) {\n    return (\n        <View style={{ flex: 1 }}>\n          <ImageBackground source={swoopBackground} style={{width: '102%', height: '103%', left: -1}}>\n            <Text style={{ top: 65, color: 'white', fontSize: 30, fontWeight: 'bold', fontFamily: 'Helvetica', textAlign: 'center' }}> TASKS </Text>\n            <View style={{ flex: 0.75 }}>\n                <View style={{ flex: 1, marginTop: 150, marginBottom: 50, justifyContent: 'space-between', alignItems: 'center' }}>\n                    <TouchableOpacity style={styles.dailyTasksModule}\n                    onPress={() => setIsTransportationTask(true)}>\n                        <View style={styles.dailyTasksHeader}>\n                            <Text style={styles.tasksText}> Task of the Day </Text>\n                        </View>\n                        <Text style={styles.subtasksText}> Take some time to consider your transportation options for court. </Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={{ flex: 1, marginTop: 150, marginBottom: 50, justifyContent: 'space-between', alignItems: 'center' }}>\n                    <TouchableOpacity style={styles.previousTasksModule}>\n                        <View style={styles.previousTasksHeader}>\n                            <Text style={styles.tasksText}> Previous Tasks </Text>\n                        </View>\n                        <Text style={styles.subtasksText}> None so far! </Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n          </ImageBackground>\n        </View>\n    );\n  }\n    else {\n        return (<TransportationTaskPage \n            setSelectedCategory={setSelectedCategory}\n            selectedCategory={selectedCategory}\n            nextScreen={nextScreen}\n            setNextScreen={setNextScreen}/>)\n    }\n\n};\n\nconst styles = StyleSheet.create({\n  dailyTasksModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {width: 1, height: 2},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 155,\n    width: '90%',\n    justifyContent: 'center',\n  },\n  previousTasksModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {width: 1, height: 2},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 135,\n    width: '90%',\n    justifyContent: 'center',\n  },\n  dailyTasksHeader: {\n      backgroundColor: 'white',\n  },\n  previousTasksHeader: {\n    backgroundColor: 'white',\n    marginTop: 0\n},\n  tasksText: {\n    color: '#8AB5B2',\n    fontSize: 26,\n    textAlign: 'center',\n    alignSelf: 'center',\n    marginBottom: 10,\n    marginTop:10\n  },\n  subtasksText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center',\n    alignSelf: 'center',\n    marginTop: 15\n  }\n});\n\nexport default TasksScreen;"]},"metadata":{},"sourceType":"module"}