{"ast":null,"code":"import * as React from 'react';\nimport Moment from 'moment';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport CheckBox from 'react-native-check-box';\n\nvar swoopBackground = require(\"./home_background.png\");\n\nvar SettingsScreen = function SettingsScreen(_ref) {\n  var navigation = _ref.navigation,\n      childCare = _ref.childCare,\n      courtDate = _ref.courtDate,\n      onChangeCourtDate = _ref.onChangeCourtDate,\n      location = _ref.location,\n      onChangeLocation = _ref.onChangeLocation,\n      notifSettings = _ref.notifSettings,\n      onChangeNotifSettings = _ref.onChangeNotifSettings;\n  var fakeName = \"Jane\";\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 0,\n      backgroundColor: '#85B0AE'\n    }\n  }, React.createElement(Text, {\n    style: [styles.myPlanHeader]\n  }, \"Hi, \", fakeName, \"!\"), React.createElement(View, {\n    style: styles.settingsContent\n  }, React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, {\n    style: styles.settingsHeader\n  }, \"edit court date: \"), React.createElement(TextInputMask, {\n    style: [styles.input],\n    value: courtDate,\n    onChangeText: onChangeCourtDate,\n    type: 'datetime',\n    options: {\n      format: 'DD/MM/YYYY'\n    }\n  })), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, {\n    style: styles.settingsHeader\n  }, \"edit court time: \"), React.createElement(TextInput, {\n    style: [styles.input],\n    onChangeText: onChangeLocation,\n    value: location\n  })), React.createElement(View, {\n    style: styles.rowLong\n  }, React.createElement(Text, {\n    style: styles.settingsHeader\n  }, \"edit court location: \"), React.createElement(TextInput, {\n    style: [styles.input, {\n      left: 165\n    }],\n    onChangeText: onChangeLocation,\n    value: location\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.settingsHeader\n  }, \"edit notification settings: \"), React.createElement(View, {\n    style: styles.checkboxes\n  }, React.createElement(View, {\n    style: styles.checkboxItem\n  }, React.createElement(CheckBox, {\n    style: [styles.checkbox, {\n      flex: 1,\n      padding: 10\n    }],\n    rightText: \"Give me weekly reminders about my court date\"\n  })), React.createElement(View, {\n    style: styles.checkboxItem\n  }, React.createElement(CheckBox, {\n    style: [styles.checkbox, {\n      flex: 1,\n      padding: 10\n    }],\n    rightText: \"Notify me when I have a new task\"\n  })), React.createElement(View, {\n    style: styles.checkboxItem\n  }, React.createElement(CheckBox, {\n    style: [styles.checkbox, {\n      flex: 1,\n      padding: 10\n    }],\n    rightText: \"Remind me a week before my court date\"\n  })), React.createElement(View, {\n    style: styles.checkboxItem\n  }, React.createElement(CheckBox, {\n    style: [styles.checkbox, {\n      flex: 1,\n      padding: 10\n    }],\n    rightText: \"Remind me the day before my court date\"\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  myPlanHeader: {\n    top: 70,\n    fontFamily: 'Helvetica',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 30,\n    lineHeight: 28,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    letterSpacing: 0.4,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  settingsContent: {\n    top: 90\n  },\n  settingsHeader: {\n    fontSize: 20,\n    lineHeight: 24,\n    color: 'white',\n    left: 20,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"space-around\"\n  },\n  rowLong: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"space-around\"\n  },\n  checkboxItem: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"space-around\"\n  },\n  checkboxText: {\n    flex: 1,\n    flexWrap: 'wrap'\n  },\n  input: {\n    width: 185,\n    borderRadius: 6,\n    marginBottom: 10,\n    marginLeft: 20,\n    top: 12,\n    height: 30,\n    borderWidth: 1.5,\n    borderColor: 'white'\n  },\n  dropShadow: {\n    shadowColor: '#00000040',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3\n  },\n  checkboxes: {\n    left: 20,\n    marginRight: 30,\n    fontSize: 16\n  },\n  underline: {\n    textDecorationLine: 'underline'\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/Settings.js"],"names":["React","Moment","TextInputMask","CheckBox","swoopBackground","require","SettingsScreen","navigation","childCare","courtDate","onChangeCourtDate","location","onChangeLocation","notifSettings","onChangeNotifSettings","fakeName","flex","padding","backgroundColor","styles","myPlanHeader","settingsContent","row","settingsHeader","input","format","rowLong","left","checkboxes","checkboxItem","checkbox","StyleSheet","create","top","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","textAlign","letterSpacing","marginTop","marginBottom","display","flexDirection","alignContent","checkboxText","flexWrap","width","borderRadius","marginLeft","height","borderWidth","borderColor","dropShadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginRight","underline","textDecorationLine"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;;;;;;AAWA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAIA,IAAMC,eAAe,GAAGC,OAAO,yBAA/B;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAIhB;AAAA,MAJmBC,UAInB,QAJmBA,UAInB;AAAA,MAJ+BC,SAI/B,QAJ+BA,SAI/B;AAAA,MAHHC,SAGG,QAHHA,SAGG;AAAA,MAHQC,iBAGR,QAHQA,iBAGR;AAAA,MAFHC,QAEG,QAFHA,QAEG;AAAA,MAFOC,gBAEP,QAFOA,gBAEP;AAAA,MADHC,aACG,QADHA,aACG;AAAA,MADYC,qBACZ,QADYA,qBACZ;AAEL,MAAMC,QAAQ,GAAG,MAAjB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,CAApB;AAAuBC,MAAAA,eAAe,EAAE;AAAxC;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,YAAR;AAAb,aAAyCL,QAAzC,MADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACE;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,yBADJ,EAEI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,KAAR,CADX;AAGI,IAAA,KAAK,EAAEf,SAHX;AAII,IAAA,YAAY,EAAEC,iBAJlB;AAKI,IAAA,IAAI,EAAE,UALV;AAMI,IAAA,OAAO,EAAE;AACLe,MAAAA,MAAM,EAAE;AADH;AANb,IAFJ,CADJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACG;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,yBADJ,EAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,KAAR,CADX;AAEI,IAAA,YAAY,EAAEZ,gBAFlB;AAGI,IAAA,KAAK,EAAED;AAHX,IAFJ,CAdJ,EAsBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACO;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACI;AAApB,6BADJ,EAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,KAAR,EAAe;AAACG,MAAAA,IAAI,EAAE;AAAP,KAAf,CADX;AAEI,IAAA,YAAY,EAAEf,gBAFlB;AAGI,IAAA,KAAK,EAAED;AAHX,IAFJ,CAtBJ,EA8BI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACI;AAApB,oCADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACS;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,CAACV,MAAM,CAACW,QAAR,EAAkB;AAACd,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAlB,CADX;AAQI,IAAA,SAAS,EAAE;AARf,IADJ,CADJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACU;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,CAACV,MAAM,CAACW,QAAR,EAAkB;AAACd,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAlB,CADX;AAQI,IAAA,SAAS,EAAE;AARf,IADJ,CAdJ,EA4BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACU;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,CAACV,MAAM,CAACW,QAAR,EAAkB;AAACd,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAlB,CADX;AAQI,IAAA,SAAS,EAAE;AARf,IADJ,CA5BJ,EA0CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACU;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,CAACV,MAAM,CAACW,QAAR,EAAkB;AAACd,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAlB,CADX;AAQI,IAAA,SAAS,EAAE;AARf,IADJ,CA1CJ,CAFJ,CA9BJ,CAFF,CADJ;AAiGD,CAzGD;;AA2GA,IAAME,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,YAAY,EAAE;AACVa,IAAAA,GAAG,EAAE,EADK;AAEVC,IAAAA,UAAU,EAAE,WAFF;AAGVC,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,UAAU,EAAE,MAJF;AAKVC,IAAAA,QAAQ,EAAE,EALA;AAMVC,IAAAA,UAAU,EAAE,EANF;AAOVC,IAAAA,KAAK,EAAE,SAPG;AAQVC,IAAAA,SAAS,EAAE,QARD;AASVC,IAAAA,aAAa,EAAE,GATL;AAUVC,IAAAA,SAAS,EAAE,EAVD;AAWVC,IAAAA,YAAY,EAAE;AAXJ,GADe;AAc7BtB,EAAAA,eAAe,EAAE;AACbY,IAAAA,GAAG,EAAE;AADQ,GAdY;AAiB7BV,EAAAA,cAAc,EAAE;AACZc,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,UAAU,EAAE,EAFA;AAGZC,IAAAA,KAAK,EAAE,OAHK;AAIZZ,IAAAA,IAAI,EAAE,EAJM;AAKZe,IAAAA,SAAS,EAAE,EALC;AAMZC,IAAAA,YAAY,EAAE;AANF,GAjBa;AAyB7BrB,EAAAA,GAAG,EAAE;AACDsB,IAAAA,OAAO,EAAE,MADR;AAEDC,IAAAA,aAAa,EAAE,KAFd;AAGDC,IAAAA,YAAY,EAAE;AAHb,GAzBwB;AA8B7BpB,EAAAA,OAAO,EAAE;AACLkB,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,QAFV;AAGLC,IAAAA,YAAY,EAAE;AAHT,GA9BoB;AAmC7BjB,EAAAA,YAAY,EAAE;AACVe,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,aAAa,EAAE,KAFL;AAGVC,IAAAA,YAAY,EAAE;AAHJ,GAnCe;AAwC7BC,EAAAA,YAAY,EAAE;AACV/B,IAAAA,IAAI,EAAE,CADI;AAEVgC,IAAAA,QAAQ,EAAE;AAFA,GAxCe;AA4C7BxB,EAAAA,KAAK,EAAE;AACHyB,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,YAAY,EAAE,CAFX;AAGHP,IAAAA,YAAY,EAAE,EAHX;AAIHQ,IAAAA,UAAU,EAAE,EAJT;AAKHlB,IAAAA,GAAG,EAAE,EALF;AAMHmB,IAAAA,MAAM,EAAE,EANL;AAOHC,IAAAA,WAAW,EAAE,GAPV;AAQHC,IAAAA,WAAW,EAAE;AARV,GA5CsB;AAsD7BC,EAAAA,UAAU,EAAG;AACTC,IAAAA,WAAW,EAAE,WADJ;AAETC,IAAAA,YAAY,EAAE;AAACR,MAAAA,KAAK,EAAE,CAAR;AAAWG,MAAAA,MAAM,EAAE;AAAnB,KAFL;AAGTM,IAAAA,aAAa,EAAE,GAHN;AAITC,IAAAA,YAAY,EAAE;AAJL,GAtDgB;AA4D7B/B,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE,EADE;AAERiC,IAAAA,WAAW,EAAE,EAFL;AAGRvB,IAAAA,QAAQ,EAAE;AAHF,GA5DiB;AAiE7BwB,EAAAA,SAAS,EAAE;AAACC,IAAAA,kBAAkB,EAAE;AAArB;AAjEkB,CAAlB,CAAf;AAoEA,eAAexD,cAAf","sourcesContent":["import * as React from 'react';\r\nimport Moment from 'moment';\r\nimport {\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  ImageBackground,\r\n  TextInput\r\n} from 'react-native';\r\nimport { TextInputMask } from 'react-native-masked-text'\r\nimport CheckBox from 'react-native-check-box';\r\n\r\n\r\n\r\nconst swoopBackground = require(\"./home_background.png\");\r\n\r\n\r\nconst SettingsScreen = ({ navigation, childCare,\r\n    courtDate, onChangeCourtDate,\r\n    location, onChangeLocation,\r\n    notifSettings, onChangeNotifSettings\r\n }) => {\r\n    // eventually replace w/ real data\r\n  const fakeName = \"Jane\";\r\n\r\n  return (\r\n      <View style={{ flex: 1, padding: 0, backgroundColor: '#85B0AE' }}>\r\n        <Text style={[styles.myPlanHeader]}>Hi, {fakeName}!</Text>\r\n        <View style={styles.settingsContent}>\r\n            <View style={styles.row}>\r\n                <Text style={styles.settingsHeader}>edit court date: </Text>\r\n                <TextInputMask\r\n                    style={[styles.input]}\r\n                    //refInput={(ref) => courtDate = ref}\r\n                    value={courtDate}\r\n                    onChangeText={onChangeCourtDate}\r\n                    type={'datetime'}\r\n                    options={{\r\n                        format: 'DD/MM/YYYY'\r\n                    }}\r\n                />\r\n            </View>\r\n            <View style={styles.row}>\r\n                <Text style={styles.settingsHeader}>edit court time: </Text>\r\n                <TextInput\r\n                    style={[styles.input]}\r\n                    onChangeText={onChangeLocation}\r\n                    value={location}\r\n                />\r\n            </View>\r\n            <View style={styles.rowLong}>\r\n                <Text style={styles.settingsHeader}>edit court location: </Text>\r\n                <TextInput\r\n                    style={[styles.input, {left: 165}]}\r\n                    onChangeText={onChangeLocation}\r\n                    value={location}\r\n                />\r\n            </View>\r\n            <View>\r\n                <Text style={styles.settingsHeader}>edit notification settings: </Text>\r\n                <View style={styles.checkboxes}>\r\n                    <View style={styles.checkboxItem}>\r\n                        <CheckBox\r\n                            style={[styles.checkbox, {flex: 1, padding: 10}]}\r\n                            // onClick={()=>{\r\n                            // this.setState({\r\n                            //     isChecked:!this.state.isChecked\r\n                            // })\r\n                            // }}\r\n                            // isChecked={this.state.isChecked}\r\n                            rightText={\"Give me weekly reminders about my court date\"}\r\n                        />\r\n                        {/* <Text style={styles.checkboxText}></Text> */}\r\n                    </View>\r\n                    <View style={styles.checkboxItem}>\r\n                        <CheckBox\r\n                            style={[styles.checkbox, {flex: 1, padding: 10}]}\r\n                            // onClick={()=>{\r\n                            // this.setState({\r\n                            //     isChecked:!this.state.isChecked\r\n                            // })\r\n                            // }}\r\n                            // isChecked={this.state.isChecked}\r\n                            rightText={\"Notify me when I have a new task\"}\r\n                        />\r\n                        {/* <Text style={styles.checkboxText}></Text> */}\r\n                    </View>\r\n\r\n                    <View style={styles.checkboxItem}>\r\n                        <CheckBox\r\n                            style={[styles.checkbox, {flex: 1, padding: 10}]}\r\n                            // onClick={()=>{\r\n                            // this.setState({\r\n                            //     isChecked:!this.state.isChecked\r\n                            // })\r\n                            // }}\r\n                            // isChecked={this.state.isChecked}\r\n                            rightText={\"Remind me a week before my court date\"}\r\n                        />\r\n                        {/* <Text style={styles.checkboxText}></Text> */}\r\n                    </View>\r\n\r\n                    <View style={styles.checkboxItem}>\r\n                        <CheckBox\r\n                            style={[styles.checkbox, {flex: 1, padding: 10}]}\r\n                            // onClick={()=>{\r\n                            // this.setState({\r\n                            //     isChecked:!this.state.isChecked\r\n                            // })\r\n                            // }}\r\n                            // isChecked={this.state.isChecked}\r\n                            rightText={\"Remind me the day before my court date\"}\r\n                        />\r\n                        {/* <Text style={styles.checkboxText}></Text> */}\r\n                    </View>\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n\r\n      </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    myPlanHeader: {\r\n        top: 70,\r\n        fontFamily: 'Helvetica',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'bold',\r\n        fontSize: 30,\r\n        lineHeight: 28,\r\n        color: '#FFFFFF',\r\n        textAlign: 'center',\r\n        letterSpacing: 0.4,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    settingsContent: {\r\n        top: 90,\r\n    },\r\n    settingsHeader: {\r\n        fontSize: 20,\r\n        lineHeight: 24,\r\n        color: 'white',\r\n        left: 20,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    row: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignContent: \"space-around\"\r\n    },\r\n    rowLong: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"space-around\"\r\n    },\r\n    checkboxItem: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignContent: \"space-around\"\r\n    },\r\n    checkboxText: {\r\n        flex: 1,\r\n        flexWrap: 'wrap',\r\n    },\r\n    input: {\r\n        width: 185,\r\n        borderRadius: 6,\r\n        marginBottom: 10,\r\n        marginLeft: 20,\r\n        top: 12,\r\n        height: 30,\r\n        borderWidth: 1.5,\r\n        borderColor: 'white',\r\n    },\r\n    dropShadow:  {\r\n        shadowColor: '#00000040',\r\n        shadowOffset: {width: 0, height: 4},\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 3,\r\n    },\r\n    checkboxes: {\r\n        left: 20,\r\n        marginRight: 30,\r\n        fontSize: 16,\r\n    },\r\n    underline: {textDecorationLine: 'underline'},\r\n});\r\n\r\nexport default SettingsScreen;\r\n"]},"metadata":{},"sourceType":"module"}