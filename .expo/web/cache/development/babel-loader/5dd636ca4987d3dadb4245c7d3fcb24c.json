{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport MessageModule from \"./MessageModule\";\nimport MakeAPost from \"./MakeAPost\";\nimport { FontAwesome5, MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport { courtDatePosts, contactCourtPosts, legalHelpPosts, transportationPosts, testimonialPosts, otherPosts } from \"../utils\";\n\nvar swoopBackground = require(\"./Message_Board_Background.png\");\n\nvar categories = ['court date information', 'contacting court', 'transportation', 'testimonials', 'legal help', 'other'];\n\nfunction getPosts(category) {\n  switch (category) {\n    case 'court date information':\n      return courtDatePosts;\n\n    case 'contacting court':\n      return contactCourtPosts;\n\n    case 'legal help':\n      return legalHelpPosts;\n\n    case 'transportation':\n      return transportationPosts;\n\n    case 'testimonials':\n      return testimonialPosts;\n\n    default:\n      return otherPosts;\n  }\n}\n\nvar onShare = function onShare(title) {\n  var result;\n  return _regeneratorRuntime.async(function onShare$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Share.share({\n            message: \"courtesy | \" + title\n          }));\n\n        case 3:\n          result = _context.sent;\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0.message);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar MessageBoardScreen = function MessageBoardScreen(_ref) {\n  var navigation = _ref.navigation,\n      selectedCategory = _ref.selectedCategory,\n      setSelectedCategory = _ref.setSelectedCategory;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postToDisplay = _useState4[0],\n      setPostToDisplay = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newComment = _useState6[0],\n      setNewComment = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      makeNewPost = _useState8[0],\n      setMakeNewPost = _useState8[1];\n\n  if (makeNewPost) {\n    return React.createElement(MakeAPost, {\n      setMakeNewPost: setMakeNewPost\n    });\n  }\n\n  if (selectedCategory === 'none' && postToDisplay === '') {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      }\n    }, React.createElement(ImageBackground, {\n      source: swoopBackground,\n      style: {\n        width: '102%',\n        height: '103%',\n        left: -1\n      }\n    }, React.createElement(Text, {\n      style: {\n        top: 65,\n        color: 'white',\n        fontSize: 26,\n        fontWeight: 'bold',\n        fontFamily: 'Helvetica',\n        textAlign: 'center'\n      }\n    }, \" MESSAGE BOARD \"), React.createElement(View, {\n      style: {\n        width: '90%',\n        top: 90,\n        height: 40,\n        alignSelf: 'center',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }\n    }, React.createElement(View, {\n      style: styles.searchBar\n    }, React.createElement(TextInput, {\n      style: {\n        color: 'white',\n        fontSize: 16,\n        height: '100%'\n      },\n      onChangeText: setSearchTerm,\n      value: searchTerm\n    }), React.createElement(MaterialCommunityIcons, {\n      name: 'magnify',\n      color: 'white',\n      size: 20\n    })), React.createElement(TouchableOpacity, {\n      style: styles.makePostButton,\n      onPress: function onPress() {\n        return setMakeNewPost(true);\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontWeight: 'bold'\n      }\n    }, \" MAKE A POST \"), React.createElement(FontAwesome5, {\n      name: 'pencil-alt',\n      color: 'white',\n      size: 16\n    }))), React.createElement(View, {\n      style: {\n        flex: 1,\n        marginTop: 120,\n        marginBottom: 50,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }\n    }, categories.map(function (category) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.categoryModule,\n        onPress: function onPress() {\n          setSelectedCategory(category);\n          setSearchTerm(category);\n        },\n        key: category\n      }, React.createElement(Text, {\n        style: styles.categoryText\n      }, \" \", category, \" \"));\n    }))));\n  } else if (!postToDisplay) {\n    var posts = getPosts(selectedCategory);\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      }\n    }, React.createElement(ImageBackground, {\n      source: swoopBackground,\n      style: {\n        width: '102%',\n        height: '103%',\n        left: -1\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        top: 80,\n        justifyContent: 'space-between',\n        width: '90%',\n        alignSelf: 'center'\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: 'row',\n        alignSelf: 'center'\n      },\n      onPress: function onPress() {\n        setSelectedCategory('none');\n        setSearchTerm('');\n      }\n    }, React.createElement(Ionicons, {\n      name: 'md-arrow-back',\n      color: 'white',\n      size: 24\n    }), React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20\n      }\n    }, \" Back \")), React.createElement(TouchableOpacity, {\n      style: styles.makePostButtonFull,\n      onPress: function onPress() {\n        return setMakeNewPost(true);\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontWeight: 'bold'\n      }\n    }, \" MAKE A POST \"), React.createElement(FontAwesome5, {\n      name: 'pencil-alt',\n      color: 'white',\n      size: 16\n    }))), React.createElement(View, {\n      style: styles.searchBarFull\n    }, React.createElement(TextInput, {\n      style: {\n        color: 'white',\n        fontSize: 16,\n        height: '100%',\n        width: '90%',\n        paddingLeft: 12\n      },\n      onChangeText: setSearchTerm,\n      value: searchTerm\n    }), React.createElement(MaterialCommunityIcons, {\n      name: 'magnify',\n      color: 'white',\n      size: 20\n    })), React.createElement(ScrollView, {\n      style: {\n        top: 140,\n        marginBottom: 150\n      },\n      contentContainerStyle: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      scrollEnabled: true\n    }, posts.sort(function (a, b) {\n      return a.upvotes < b.upvotes ? 1 : -1;\n    }).map(function (post) {\n      return React.createElement(MessageModule, {\n        key: post.title,\n        post: post,\n        setPostToDisplay: setPostToDisplay\n      });\n    }))));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#85B0AE'\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        top: 70,\n        marginLeft: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: 'row',\n        alignSelf: 'center'\n      },\n      onPress: function onPress() {\n        setPostToDisplay('');\n        setNewComment('');\n      }\n    }, React.createElement(Ionicons, {\n      name: 'md-arrow-back',\n      color: 'white',\n      size: 24\n    }), React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20\n      }\n    }, \" Back \"))), React.createElement(View, {\n      style: {\n        backgroundColor: '#779391',\n        borderWidth: 1,\n        borderColor: '#596362',\n        top: 100,\n        padding: 20,\n        width: '90%',\n        borderRadius: 14,\n        alignSelf: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 0\n        },\n        shadowOpacity: 0.33,\n        shadowRadius: 3,\n        marginBottom: 120\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20\n      }\n    }, postToDisplay.title), postToDisplay.description !== '' && React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 16,\n        marginTop: 10\n      }\n    }, postToDisplay.description), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 20\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      }\n    }, React.createElement(Ionicons, {\n      name: 'md-chatbox-ellipses',\n      color: 'white',\n      size: 20\n    }), React.createElement(Text, {\n      style: {\n        color: 'white'\n      }\n    }, \" \", postToDisplay.comments.length, \" \", postToDisplay.comments.length === 1 ? 'comment' : 'comments', \" \")), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      }\n    }, React.createElement(Ionicons, {\n      name: 'md-share-social',\n      color: 'white',\n      size: 20\n    }), React.createElement(Text, {\n      style: {\n        color: 'white'\n      },\n      onPress: function onPress() {\n        return onShare(postToDisplay.title);\n      }\n    }, \" share \"))), React.createElement(View, {\n      style: {\n        height: 1.5,\n        width: '100%',\n        backgroundColor: 'white',\n        marginTop: 20,\n        marginBottom: 15\n      }\n    }), postToDisplay.comments.length === 0 && React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 16,\n        fontStyle: 'italic'\n      }\n    }, \"no comments yet\"), postToDisplay.comments.length > 0 && React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontWeight: 'bold',\n        marginBottom: 15,\n        textDecorationLine: 'underline'\n      }\n    }, \"COMMENTS\"), postToDisplay.comments.map(function (comment, index) {\n      return React.createElement(View, {\n        style: {\n          marginBottom: 15,\n          backgroundColor: '#E2E2E2',\n          padding: 8,\n          alignSelf: 'flex-start',\n          marginLeft: 20,\n          borderRadius: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#596362',\n          fontSize: 16,\n          marginLeft: 4,\n          marginRight: 4\n        }\n      }, comment));\n    })), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    }, React.createElement(View, {\n      style: styles.addComment\n    }, React.createElement(TextInput, {\n      style: {\n        fontSize: 18,\n        height: '100%',\n        width: '100%',\n        paddingLeft: 8,\n        color: 'white'\n      },\n      onChangeText: setNewComment,\n      value: newComment,\n      placeholder: 'add a comment...',\n      placeholderTextColor: 'white'\n    })), React.createElement(TouchableOpacity, null, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontWeight: 'bold'\n      },\n      onPress: function onPress() {\n        postToDisplay.comments.push(newComment);\n        setNewComment('');\n      }\n    }, \" COMMENT \"))));\n  }\n};\n\nvar styles = StyleSheet.create({\n  categoryModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 80,\n    width: '90%',\n    justifyContent: 'center'\n  },\n  categoryText: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    alignSelf: 'center'\n  },\n  searchBar: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 100,\n    height: '100%',\n    width: '64%',\n    padding: 10,\n    color: 'white',\n    fontSize: 16,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  searchBarFull: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 100,\n    height: 40,\n    width: '75%',\n    padding: 10,\n    color: 'white',\n    fontSize: 16,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'center',\n    top: 110\n  },\n  makePostButton: {\n    backgroundColor: '#3E6664',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 2,\n      height: 4\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3,\n    borderRadius: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 6,\n    paddingRight: 6,\n    flexDirection: 'row'\n  },\n  messageModule: {\n    backgroundColor: '#A7CBC8',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.33,\n    shadowRadius: 3,\n    borderRadius: 10,\n    flexDirection: 'row',\n    padding: 10,\n    width: '90%',\n    height: 100,\n    marginBottom: 25\n  },\n  makePostButtonFull: {\n    backgroundColor: '#3E6664',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 2,\n      height: 4\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3,\n    borderRadius: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    flexDirection: 'row',\n    alignSelf: 'center'\n  },\n  addComment: {\n    borderWidth: 1.5,\n    borderColor: 'white',\n    borderRadius: 14,\n    height: 40,\n    width: '68%',\n    marginRight: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    color: 'white',\n    fontSize: 16,\n    display: 'flex',\n    flexDirection: 'row',\n    alignSelf: 'center'\n  }\n});\nexport default MessageBoardScreen;","map":{"version":3,"sources":["/Users/oliviaotto/Documents/Stanford/CS147/courtesy/screens/MessageBoardScreen.js"],"names":["React","useState","useEffect","MessageModule","MakeAPost","FontAwesome5","MaterialCommunityIcons","Ionicons","courtDatePosts","contactCourtPosts","legalHelpPosts","transportationPosts","testimonialPosts","otherPosts","swoopBackground","require","categories","getPosts","category","onShare","title","Share","share","message","result","alert","MessageBoardScreen","navigation","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","postToDisplay","setPostToDisplay","newComment","setNewComment","makeNewPost","setMakeNewPost","flex","width","height","left","top","color","fontSize","fontWeight","fontFamily","textAlign","alignSelf","flexDirection","justifyContent","styles","searchBar","makePostButton","marginTop","marginBottom","alignItems","map","categoryModule","categoryText","posts","makePostButtonFull","searchBarFull","paddingLeft","sort","a","b","upvotes","post","backgroundColor","marginLeft","borderWidth","borderColor","padding","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","description","comments","length","fontStyle","textDecorationLine","comment","index","marginRight","addComment","push","StyleSheet","create","display","paddingRight","messageModule"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  ImageBackground,\n  Dimensions,\n  TextInput,\n  BackHandler,\n  ScrollView,\n  Share,\n} from 'react-native';\nimport MessageModule from './MessageModule';\nimport MakeAPost from './MakeAPost';\nimport { FontAwesome5, MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport { courtDatePosts, contactCourtPosts, legalHelpPosts, transportationPosts, testimonialPosts, otherPosts } from '../utils';\n\nconst swoopBackground = require(\"./Message_Board_Background.png\");\nconst categories = ['court date information', 'contacting court', 'transportation', 'testimonials', 'legal help', 'other'];\n\nfunction getPosts(category) {\n  switch (category) {\n    case 'court date information':\n      return courtDatePosts;\n    case 'contacting court':\n      return contactCourtPosts;\n    case 'legal help':\n      return legalHelpPosts;\n    case 'transportation':\n      return transportationPosts;\n    case 'testimonials':\n      return testimonialPosts;\n    default:\n      return otherPosts;\n  }\n}\n\nconst onShare = async (title) => {\n  try {\n    const result = await Share.share({\n      message: `courtesy | ${title}`,\n    });\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nconst MessageBoardScreen = ({ navigation, selectedCategory, setSelectedCategory}) => {\n//  const [selectedCategory, setSelectedCategory] = useState('none');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [postToDisplay, setPostToDisplay] = useState('');\n  const [newComment, setNewComment] = useState('');\n  const [makeNewPost, setMakeNewPost] = useState(false);\n\n  if (makeNewPost) {\n    return (\n      <MakeAPost setMakeNewPost={setMakeNewPost}/>\n    );\n  }\n\n  if (selectedCategory === 'none' && postToDisplay === '') {\n    return (\n        <View style={{ flex: 1 }}>\n          <ImageBackground source={swoopBackground} style={{ width: '102%', height: '103%', left: -1 }}>\n            <Text style={{ top: 65, color: 'white', fontSize: 26, fontWeight: 'bold', fontFamily: 'Helvetica', textAlign: 'center' }}> MESSAGE BOARD </Text>\n            <View style={{ width: '90%', top: 90, height: 40, alignSelf: 'center', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <View style={styles.searchBar}>\n                <TextInput\n                  style={{ color: 'white', fontSize: 16, height: '100%' }}\n                  onChangeText={setSearchTerm}\n                  value={searchTerm}\n                />\n                <MaterialCommunityIcons name={'magnify'} color={'white'} size={20} />\n              </View>\n              <TouchableOpacity style={styles.makePostButton} onPress={() => setMakeNewPost(true)}>\n                <Text style={{ color: 'white', fontWeight: 'bold'}}> MAKE A POST </Text>\n                <FontAwesome5 name={'pencil-alt'} color={'white'} size={16}/>\n              </TouchableOpacity>\n            </View>\n            <View style={{ flex: 1, marginTop: 120, marginBottom: 50, justifyContent: 'space-between', alignItems: 'center' }}>\n              {\n                categories.map((category) => {\n                  return (\n                    <TouchableOpacity style={styles.categoryModule} onPress={() => {\n                      setSelectedCategory(category);\n                      setSearchTerm(category);\n                    }} key={category}>\n                      <Text style={styles.categoryText}> {category} </Text>\n                    </TouchableOpacity>\n                  )\n                })\n              }\n            </View>\n          </ImageBackground>\n        </View>\n    );\n  }\n\n  else if (!postToDisplay) {\n    const posts = getPosts(selectedCategory);\n    return (\n      <View style={{ flex: 1 }}>\n        <ImageBackground source={swoopBackground} style={{ width: '102%', height: '103%', left: -1 }}>\n          <View style={{ flexDirection: 'row', top: 80, justifyContent: 'space-between', width: '90%', alignSelf: 'center' }}>\n            <TouchableOpacity style={{ flexDirection: 'row', alignSelf: 'center' }} onPress={() => {\n              setSelectedCategory('none');\n              setSearchTerm('');\n            }}>\n              <Ionicons name={'md-arrow-back'} color={'white'} size={24}/>\n              <Text style={{ color: 'white', fontSize: 20}}> Back </Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.makePostButtonFull} onPress={() => setMakeNewPost(true)}>\n              <Text style={{ color: 'white', fontWeight: 'bold'}}> MAKE A POST </Text>\n              <FontAwesome5 name={'pencil-alt'} color={'white'} size={16}/>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.searchBarFull}>\n            <TextInput\n              style={{ color: 'white', fontSize: 16, height: '100%', width: '90%', paddingLeft: 12 }}\n              onChangeText={setSearchTerm}\n              value={searchTerm}\n            />\n            <MaterialCommunityIcons name={'magnify'} color={'white'} size={20} />\n          </View>\n          <ScrollView style={{ top: 140, marginBottom: 150 }} contentContainerStyle={{ alignItems: 'center', justifyContent: 'center' }} scrollEnabled>\n          { posts.sort((a, b) => a.upvotes < b.upvotes ? 1 : -1).map((post) => {\n              return (\n                <MessageModule key={post.title} post={post} setPostToDisplay={setPostToDisplay}/>\n              )\n            })\n          }\n          </ScrollView>\n        </ImageBackground>\n      </View>\n    );\n  }\n\n  else {\n    return (\n      <View style={{ flex: 1, backgroundColor: '#85B0AE' }}>\n        {/* back button */}\n        <View style={{ flexDirection: 'row', top: 70, marginLeft: 15 }}>\n          <TouchableOpacity style={{ flexDirection: 'row', alignSelf: 'center' }} onPress={() => {\n            setPostToDisplay('');\n            setNewComment('');\n          }}>\n            <Ionicons name={'md-arrow-back'} color={'white'} size={24}/>\n            <Text style={{ color: 'white', fontSize: 20}}> Back </Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* post content */}\n        <View style={{ backgroundColor: '#779391', borderWidth: 1, borderColor: '#596362', top: 100, padding: 20, width: '90%', borderRadius: 14, alignSelf: 'center', shadowColor: '#000', shadowOffset: {width: 0, height: 0}, shadowOpacity: 0.33, shadowRadius: 3, marginBottom: 120 }}>\n          <Text style={{ color: 'white', fontSize: 20 }}>{postToDisplay.title}</Text>\n          { postToDisplay.description !== '' &&\n            <Text style={{ color: 'white', fontSize: 16, marginTop: 10 }}>{postToDisplay.description}</Text>\n          }\n\n          {/* action buttons */}\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginTop: 20 }}>\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Ionicons name={'md-chatbox-ellipses'} color={'white'} size={20}/>\n              <Text style={{ color: 'white' }}> {postToDisplay.comments.length} {postToDisplay.comments.length === 1 ? 'comment' : 'comments'} </Text>\n            </View>\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              <Ionicons name={'md-share-social'} color={'white'} size={20}/>\n              <Text style={{ color: 'white' }} onPress={() => onShare(postToDisplay.title)}> share </Text>\n            </View>\n          </View>\n\n          {/* divider */}\n          <View style={{ height: 1.5, width: '100%', backgroundColor: 'white', marginTop: 20, marginBottom: 15 }} />\n\n          {/* case: no comments */}\n          {\n            (postToDisplay.comments.length === 0) &&\n                <Text style={{ color: 'white', fontSize: 16, fontStyle: 'italic' }}>no comments yet</Text>\n          }\n\n          {/* case: comments */}\n          {\n            (postToDisplay.comments.length > 0) &&\n              <Text style={{ color: 'white', fontWeight: 'bold', marginBottom: 15, textDecorationLine: 'underline' }}>COMMENTS</Text>\n          }\n          {\n            postToDisplay.comments.map((comment, index) => {\n              return (\n                <View style={{ marginBottom: 15, backgroundColor: '#E2E2E2', padding: 8, alignSelf: 'flex-start', marginLeft: 20, borderRadius: 15,  }}>\n                  <Text style={{ color: '#596362', fontSize: 16, marginLeft: 4, marginRight: 4 }}>{comment}</Text>\n                </View>\n              )\n            })\n          }\n\n        </View>\n\n        {/* add comments */}\n        <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n          <View style={styles.addComment}>\n            <TextInput\n              style={{ fontSize: 18, height: '100%', width: '100%', paddingLeft: 8, color: 'white' }}\n              onChangeText={setNewComment}\n              value={newComment}\n              placeholder={'add a comment...'}\n              placeholderTextColor={'white'}\n            />\n          </View>\n          <TouchableOpacity>\n            <Text style={{ color: 'white', fontWeight: 'bold' }} onPress={() => {\n              postToDisplay.comments.push(newComment);\n              setNewComment('');\n            }}> COMMENT </Text>\n          </TouchableOpacity>\n        </View>\n\n      </View>\n    );\n  }\n\n};\n\nconst styles = StyleSheet.create({\n  categoryModule: {\n    backgroundColor: \"#8AB5B2\",\n    borderWidth: 1,\n    borderColor: \"rgba(118, 138, 137, 0.5)\",\n    shadowColor: '#000',\n    shadowOffset: {width: 1, height: 2},\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    borderRadius: 14,\n    height: 80,\n    width: '90%',\n    justifyContent: 'center'\n  },\n  categoryText: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    alignSelf: 'center'\n  },\n  searchBar: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 100,\n    height: '100%',\n    width: '64%',\n    padding: 10,\n    color: 'white',\n    fontSize: 16,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  searchBarFull: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 100,\n    height: 40,\n    width: '75%',\n    padding: 10,\n    color: 'white',\n    fontSize: 16,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'center',\n    top: 110,\n  },\n  makePostButton: {\n    backgroundColor: '#3E6664',\n    shadowColor: '#000',\n    shadowOffset: { width: 2, height: 4 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3,\n    borderRadius: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 6,\n    paddingRight: 6,\n    flexDirection: 'row',\n  },\n  messageModule: {\n    backgroundColor: '#A7CBC8',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.33,\n    shadowRadius: 3,\n    borderRadius: 10,\n    flexDirection: 'row',\n    padding: 10,\n    width: '90%',\n    height: 100,\n    marginBottom: 25,\n  },\n  makePostButtonFull: {\n    backgroundColor: '#3E6664',\n    shadowColor: '#000',\n    shadowOffset: { width: 2, height: 4 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3,\n    borderRadius: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    flexDirection: 'row',\n    alignSelf: 'center'\n  },\n  addComment: {\n    borderWidth: 1.5,\n    borderColor: 'white',\n    borderRadius: 14,\n    height: 40,\n    width: '68%',\n    marginRight: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    color: 'white',\n    fontSize: 16,\n    display: 'flex',\n    flexDirection: 'row',\n    alignSelf: 'center',\n  },\n\n});\n\nexport default MessageBoardScreen;\n"]},"metadata":{},"sourceType":"module"}